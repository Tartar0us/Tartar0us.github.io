{
    "version": "https://jsonfeed.org/version/1",
    "title": "Tartar0us's Blog",
    "subtitle": "高台藏鼠辈，乡野卧麒麟",
    "icon": "https://tartar0us.github.io/images/favicon.ico",
    "description": "你所厌恶的今天，是昨日死去之人苦苦奢望的明天",
    "home_page_url": "https://Tartar0us.github.io",
    "items": [
        {
            "id": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2025/",
            "url": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2025/",
            "title": "",
            "date_published": "2025-07-31T17:57:49.208Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2024/",
            "url": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2024/",
            "title": "",
            "date_published": "2025-07-31T17:57:48.615Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2023/",
            "url": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2023/",
            "title": "",
            "date_published": "2025-07-31T17:57:47.304Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2022/",
            "url": "https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%2022/",
            "title": "",
            "date_published": "2025-07-31T17:57:46.590Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://tartar0us.github.io/tech/%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B/",
            "url": "https://tartar0us.github.io/tech/%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B/",
            "title": "数学模型",
            "date_published": "2025-07-31T16:00:00.000Z",
            "content_html": "<h2 id=\"rnn\"><a class=\"anchor\" href=\"#rnn\">#</a> RNN</h2>\n<ul>\n<li>Recurrent Neural Network（循环神经网络）</li>\n<li>有记忆的神经网络，但是记忆太短，容易出错</li>\n</ul>\n<h2 id=\"lstm\"><a class=\"anchor\" href=\"#lstm\">#</a> LSTM</h2>\n<ul>\n<li>Long Short-Term Memory（长短期记忆）</li>\n<li>有三个门来控制记忆，还可以选择删除哪些记忆</li>\n<li><strong>遗忘门、输入门、输出门</strong></li>\n<li>具有时间顺序</li>\n</ul>\n",
            "tags": [
                "技术",
                "实习",
                "数据分析",
                "数学"
            ]
        },
        {
            "id": "https://tartar0us.github.io/%E7%95%99%E5%AD%A6%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/%E7%95%99%E5%AD%A6/",
            "url": "https://tartar0us.github.io/%E7%95%99%E5%AD%A6%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/%E7%95%99%E5%AD%A6/",
            "title": "留学信息",
            "date_published": "2025-07-31T16:00:00.000Z",
            "content_html": "<h2 id=\"目标院校\"><a class=\"anchor\" href=\"#目标院校\">#</a> 目标院校</h2>\n<ul>\n<li>新加坡国立大学（NUS）</li>\n<li>新加坡南洋理工大学（NTU）三位学长学姐都在这里毕业</li>\n<li>香港大学</li>\n<li>香港中文大学</li>\n<li>香港科技大学</li>\n<li>帝国理工学院（IC）</li>\n</ul>\n<h2 id=\"需要准备的内容按照重要程度排序\"><a class=\"anchor\" href=\"#需要准备的内容按照重要程度排序\">#</a> 需要准备的内容（按照重要程度排序）</h2>\n<h4 id=\"1绩点\"><a class=\"anchor\" href=\"#1绩点\">#</a> 1. 绩点</h4>\n<ul>\n<li>港新平均在 85 分，即在收到 offer 的学生中，存在 82 分和 90 分的，一般超过 85 分比较稳妥，越高越有竞争力</li>\n</ul>\n<h4 id=\"2语言\"><a class=\"anchor\" href=\"#2语言\">#</a> 2. 语言</h4>\n<ul>\n<li>这个算一个标准，一个要求，港新是总分 6.5 就可以</li>\n<li>但是帝国理工要求比较高，要 7，并且每一个小分都要 6.5 以上</li>\n<li>韦姐高考英语 146，自学的 7.5 分，太强哩</li>\n<li></li>\n</ul>\n<h4 id=\"3实习\"><a class=\"anchor\" href=\"#3实习\">#</a> 3. 实习</h4>\n<ul>\n<li>与所申请项目方向有关的实习，比如想申请 CS（computer science）最好要有互联网公司算法的实习经历，想申请数分，就要有数据分析相关的实习经历</li>\n</ul>\n<h4 id=\"4kaggle\"><a class=\"anchor\" href=\"#4kaggle\">#</a> 4.kaggle</h4>\n<ul>\n<li>此条不具有通用性</li>\n<li>kaggle 是一个数据分析有关的比赛，如果打带奖金的比赛获奖，可以起到提升背景的作用。</li>\n<li>今天（8 月 1 日）学完了 python 基本语法，还有各种机器学习模型、以及数据分析的流程，我跟晓蝶姐说想要一些公司的实例复现一下，她跟我说可以上 kaggle 打打比赛，学学真正的数据分析</li>\n</ul>\n<h4 id=\"5学术\"><a class=\"anchor\" href=\"#5学术\">#</a> 5. 学术</h4>\n<ul>\n<li>发论文绝对有利于申请，但是这个对我来说有点太难了。我一个绩点 3.7 的学生感觉不太可能在学术方面有所建树<br />\n有</li>\n<li>韦姐说，我们院的几个研究和数据分析、人工智能沾边的老师里边，安爽导师跟我最适配。我过段时间试试可不可以给安爽老师打杂，干一些活，哪怕能学到一点点知识也可以，这绝对是一个不可多得的机会。</li>\n<li>安爽导师推荐过的几本书：数据分析，大数据，机器学习</li>\n</ul>\n",
            "tags": [
                "学业",
                "留学"
            ]
        },
        {
            "id": "https://tartar0us.github.io/Kaggle/%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7/",
            "url": "https://tartar0us.github.io/Kaggle/%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7/",
            "title": "kaggle泰坦尼克号问题",
            "date_published": "2025-07-31T16:00:00.000Z",
            "content_html": "<p><s>第一个问题，翻译页面只翻译了一部分，重要的教程部分还是英文。强行锻炼了我的英语能力</s></p>\n<h3 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h3>\n",
            "tags": [
                "技术",
                "实习",
                "数据分析",
                "kaggle"
            ]
        },
        {
            "id": "https://tartar0us.github.io/Kaggle/kaggle%E5%85%A5%E9%97%A8/",
            "url": "https://tartar0us.github.io/Kaggle/kaggle%E5%85%A5%E9%97%A8/",
            "title": "Kaggle",
            "date_published": "2025-07-31T16:00:00.000Z",
            "content_html": "<h3 id=\"入门\"><a class=\"anchor\" href=\"#入门\">#</a> 入门</h3>\n<ul>\n<li>本来打算把 kaggle 入门归类到我们的 tech 文件夹中，但是想到未来还要有很多的博客关于 kaggle，就直接开了一个文件夹。</li>\n</ul>\n<h3 id=\"如何使用kaggle\"><a class=\"anchor\" href=\"#如何使用kaggle\">#</a> 如何使用 kaggle</h3>\n<ul>\n<li>下载数据集</li>\n<li>模型求解</li>\n<li>提交数据 -&gt; 得到分数</li>\n<li>优化模型，尝试获得更高的分数</li>\n<li>最终得到排名</li>\n</ul>\n<h3 id=\"官方比赛介绍\"><a class=\"anchor\" href=\"#官方比赛介绍\">#</a> 官方比赛介绍</h3>\n<ol>\n<li><strong>参加比赛</strong><br />\n阅读挑战说明，接受比赛规则并访问比赛数据集。</li>\n<li><strong>开始工作</strong><br />\n下载数据，在本地或 Kaggle Notebooks（我们无需设置、可自定义的 Jupyter Notebooks 环境，带有免费 GPU）上构建模型，并生成预测文件。</li>\n<li><strong>提交</strong><br />\n：将您的预测作为提交上传到 Kaggle 上，并获得准确度分数。</li>\n<li><strong>查看排行榜</strong><br />\n查看您的模型与我们排行榜上其他 Kaggler 的排名如何。</li>\n<li><strong>提高你的分数查看</strong><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2FnZ2xlLmNvbS9jL3RpdGFuaWMvZGlzY3Vzc2lvbg==\">讨论论坛</span>，找到其他竞争对手的大量教程和见解。</li>\n</ol>\n",
            "tags": [
                "技术",
                "实习",
                "数据分析",
                "kaggle"
            ]
        },
        {
            "id": "https://tartar0us.github.io/tech/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/",
            "url": "https://tartar0us.github.io/tech/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/",
            "title": "非线性规划",
            "date_published": "2025-07-31T06:48:28.358Z",
            "content_html": "<h2 id=\"非线性规划定义\"><a class=\"anchor\" href=\"#非线性规划定义\">#</a> 非线性规划定义</h2>\n<ul>\n<li>当目标函数和约束条件中有一个是决策变量 x 的非线性表达式时，这个数学求解问题是非线性规划问题。</li>\n</ul>\n<h2 id=\"解法\"><a class=\"anchor\" href=\"#解法\">#</a> 解法</h2>\n<p>目前没有统一的解法，都是在选定决策变量的初始值之后搜索方法</p>\n<h2 id=\"标准型\"><a class=\"anchor\" href=\"#标准型\">#</a> 标准型</h2>\n<ul>\n<li>目标函数为求最小值</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://tartar0us.github.io/research/%E8%BD%B4%E6%89%BF%E6%95%85%E9%9A%9C%E5%BC%95%E5%87%BA%E7%9A%84%E6%A8%A1%E5%9E%8B/",
            "url": "https://tartar0us.github.io/research/%E8%BD%B4%E6%89%BF%E6%95%85%E9%9A%9C%E5%BC%95%E5%87%BA%E7%9A%84%E6%A8%A1%E5%9E%8B/",
            "title": "轴承故障的振动分析学习总结",
            "date_published": "2025-07-30T16:00:00.000Z",
            "content_html": "<h2 id=\"stft短时傅里叶变换\"><a class=\"anchor\" href=\"#stft短时傅里叶变换\">#</a> STFT：短时傅里叶变换</h2>\n<p><strong>傅里叶变换</strong>的意义：把一个<strong>随时间变化的信号（时域信号）</strong>，转换成一个<strong>由频率组成的信号（频域信号 ****）</strong></p>\n<p>但是傅里叶变换只能知道这个信号里有哪些频率，并不知道这些频率什么时候出现，短时傅里叶变换可以知道在一个较短的时间段内存在哪些频率，由此知道在时间顺序上，哪一段有哪个频率的信号，</p>\n<p>比喻理解：</p>\n<p>比如一首歌：前 5 秒是低音节奏接下来的 5 秒是高音独奏，你如果只做傅里叶变换，你只会知道「有低音也有高音」，却不知道「低音在前，高音在后」。这就好像：你只知道一道菜用了哪些调料，但不知道它们是什么时候加进去的。</p>\n<p>理解：<strong>短时傅里叶变换</strong>弥补了<strong>傅里叶变换</strong>没有<strong>时间内定位能力</strong>的缺点，在实际应用中更加实用</p>\n<h2 id=\"fft快速傅里叶变换\"><a class=\"anchor\" href=\"#fft快速傅里叶变换\">#</a> FFT：快速傅里叶变换：</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>普通 DFT</strong></td>\n<td><strong>FFT</strong></td>\n</tr>\n<tr>\n<td>对每个频率都从头算一遍</td>\n<td>把计算结果递归拆分，再合并</td>\n</tr>\n<tr>\n<td>需要 N2N^2 次运算</td>\n<td>只需 Nlog⁡NN \\log N 次运算</td>\n</tr>\n<tr>\n<td>没有复用计算结果</td>\n<td>大量复用共用部分</td>\n</tr>\n<tr></tr>\n</tbody>\n</table>\n<p><strong>快速傅里叶变换是一种算法， 用来计算傅里叶变换</strong></p>\n<p><em>比喻这一块：</em></p>\n<h5 id=\"傅里叶变换一把频率分析的大枪可以扫清楚所有频率成分但是看不清时间变化\"><a class=\"anchor\" href=\"#傅里叶变换一把频率分析的大枪可以扫清楚所有频率成分但是看不清时间变化\">#</a> <strong>傅里叶变换</strong>：一把 “频率分析的大枪”—— 可以扫清楚所有频率成分，但是<strong>看不清时间变化</strong>。</h5>\n<h5 id=\"短时傅里叶变换stft在这把枪上加了个瞄准镜你可以锁定一小段时间分析频率这样你能看清在什么时候出现了什么声音\"><a class=\"anchor\" href=\"#短时傅里叶变换stft在这把枪上加了个瞄准镜你可以锁定一小段时间分析频率这样你能看清在什么时候出现了什么声音\">#</a> <strong>短时傅里叶变换（STFT）</strong>：在这把枪上加了个 “瞄准镜”，你可以<strong>锁定一小段时间分析频率</strong>，这样你能看清 “在什么时候出现了什么声音”。</h5>\n<h5 id=\"快速傅里叶变换fft对傅里叶变换的加速器-改良配件让它跑得飞快\"><a class=\"anchor\" href=\"#快速傅里叶变换fft对傅里叶变换的加速器-改良配件让它跑得飞快\">#</a> <strong>快速傅里叶变换（FFT）</strong>：对傅里叶变换的<strong>加速器 / 改良配件</strong>，让它跑得飞快！</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NzEyMDYyMTI=\">https://zhuanlan.zhihu.com/p/671206212</span></p>\n<p>凯斯西储大学  轴承数据分析</p>\n<h2 id=\"wavelet-transform小波变换\"><a class=\"anchor\" href=\"#wavelet-transform小波变换\">#</a> Wavelet Transform 小波变换：</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>比较项</strong></td>\n<td><strong>傅里叶变换（FT）</strong></td>\n<td><strong>小波变换（WT）</strong></td>\n</tr>\n<tr>\n<td>分析方式</td>\n<td>整体频率</td>\n<td>局部时频（哪时什么频率）</td>\n</tr>\n<tr>\n<td>适合信号类型</td>\n<td>平稳信号（频率不变）</td>\n<td>非平稳信号（频率变化）</td>\n</tr>\n<tr>\n<td>分辨率</td>\n<td>时间差，频率好</td>\n<td>时间和频率都能调节</td>\n</tr>\n<tr></tr>\n<tr></tr>\n</tbody>\n</table>\n<p><strong>———————————————— 公式 ————————————————</strong></p>\n<p><strong>1. 傅里叶变换：</strong></p>\n<p>![](file:///C:\\Users\\HUASHUO\\AppData\\Local\\Temp\\ksohtml18288\\wps1.jpg)</p>\n<p><strong>2. 短时傅里叶变换</strong></p>\n<p>![](file:///C:\\Users\\HUASHUO\\AppData\\Local\\Temp\\ksohtml18288\\wps2.jpg)</p>\n<p><strong>快速傅里叶变换（这是对傅里叶变换的改进）：</strong></p>\n<p>![](file:///C:\\Users\\HUASHUO\\AppData\\Local\\Temp\\ksohtml18288\\wps3.jpg)</p>\n<p><strong>3. 小波变换</strong></p>\n<p>![](file:///C:\\Users\\HUASHUO\\AppData\\Local\\Temp\\ksohtml18288\\wps4.jpg)</p>\n<p><strong>4. 连续小波变换</strong></p>\n<p>![](file:///C:\\Users\\HUASHUO\\AppData\\Local\\Temp\\ksohtml18288\\wps5.jpg)</p>\n<ul>\n<li>以上几种都是时频二维分析的方法</li>\n</ul>\n<h4 id=\"要掌握凯斯西储大学cwru轴承数据的解读与分类处理您需要学会以下知识点\"><a class=\"anchor\" href=\"#要掌握凯斯西储大学cwru轴承数据的解读与分类处理您需要学会以下知识点\">#</a> 要掌握凯斯西储大学（CWRU）轴承数据的解读与分类处理，您需要学会以下知识点：</h4>\n<ol>\n<li>\n<p>数据集理解：了解 CWRU 轴承数据集的来源、结构和特点。该数据集包含了不同类型的轴承故障数据，如内圈故障、外圈故障和滚动体故障，以及正常工况下的轴承数据。数据采集过程中，通过在轴承的驱动端和风扇端安装加速度计来记录轴承的振动信号。</p>\n</li>\n<li>\n<p>数据预处理：学习如何对振动信号数据进行预处理，包括去除噪声、归一化和特征提取。常用的预处理方法包括去除噪声、归一化和特征提取。</p>\n</li>\n<li>\n<p>特征提取：掌握从时域和频域提取特征的方法，例如均值、方差、峭度、频谱等。同时，了解时频域特征提取方法，如短时傅里叶变换、连续小波变换、希尔伯特 - 黄变换等。</p>\n</li>\n<li>\n<p>分类方法：学习如何使用机器学习算法对轴承数据进行分类。这可能包括传统的机器学习算法，如支持向量机（SVM）、决策树、随机森林等，以及深度学习方法，如卷积神经网络（CNN）和循环神经网络（RNN）。</p>\n</li>\n<li>\n<p>模型评估：了解如何评估分类模型的性能，包括准确率、召回率、F1 分数等指标。</p>\n</li>\n<li>\n<p>数据可视化：学习如何使用可视化工具，如 Matplotlib、Seaborn 或 FineBI，进行数据可视化，以帮助理解数据分布和特征。</p>\n</li>\n<li>\n<p>Python 编程：掌握 Python 编程语言，特别是使用 NumPy、Pandas、SciPy、Matplotlib 等库进行数据处理和分析。</p>\n</li>\n<li>\n<p>信号处理知识：了解基本的信号处理概念，如傅里叶变换、小波变换等，这些对于理解和处理振动信号数据非常重要。</p>\n</li>\n</ol>\n<p>通过学习这些知识点，您将能够更好地理解和处理 CWRU 轴承数据集，进行有效的故障诊断和分类。</p>\n<h2 id=\"svm-支持向量机用一个超平面把数据分成两类\"><a class=\"anchor\" href=\"#svm-支持向量机用一个超平面把数据分成两类\">#</a> <strong>svm</strong> <em>支持向量机</em>，用一个超平面把数据分成两类。</h2>\n<p>如果二维不好分开，可以加上一个非线性的特征，比如在 xoy 二维直角坐标系上不好分开，加入一个新的坐标轴，是 x 方 + y 方轴，</p>\n<p>在低纬度下对数据进行升维</p>\n<p>或者使用核技巧（目前没弄懂）</p>\n<h2 id=\"更高阶模型\"><a class=\"anchor\" href=\"#更高阶模型\">#</a> 更高阶模型</h2>\n<p><strong>随机森林</strong>：多个决策树构成<br />\n<strong> Bagging</strong>：模型之间相互独立，共同投票选出最终结果<br />\n从原始数据集中有放回的随机采样</p>\n<p><strong>Boosting</strong>：通过迭代地训练一系列弱学习器，每个新的学习器都试图纠正前一个学习器的错误。所有学习器的预测结果会被加权汇总，以得到最终预测。AdaBoost、Gradient Boosting 和 XGBoost 是 Boosting 的常见算法。</p>\n",
            "tags": [
                "技术",
                "实习",
                "数据分析"
            ]
        },
        {
            "id": "https://tartar0us.github.io/diary/7%E6%9C%8831%E6%97%A5%E6%97%A5%E8%AE%B0/",
            "url": "https://tartar0us.github.io/diary/7%E6%9C%8831%E6%97%A5%E6%97%A5%E8%AE%B0/",
            "title": "7月31日日记",
            "date_published": "2025-07-30T16:00:00.000Z",
            "content_html": "<h2 id=\"博客\"><a class=\"anchor\" href=\"#博客\">#</a> 博客</h2>\n<ul>\n<li>看着文件夹里的 md 文件越来越多，很有成就感</li>\n<li>上班的时候只要看教学时频或者看字幕双眼迷离了就开始捣鼓博客，可以提神。因为听人讲可有时候不动脑子，很快就会困了（总之还是注意力不集中呗）</li>\n<li><strong>我要给我的博客定一个标准</strong>：比如我每次记录的时间节点是什么。目前有每天的日记，还有一篇年度总结，但是我想每个月也可以写，每个学期也可以写，每个学年也可以写。虽说有点乱吧。</li>\n<li>一会如果吃完饭还有时间我要写一个以学年为单位的总结，后面找时间补 7 月的总结</li>\n</ul>\n<h2 id=\"学习\"><a class=\"anchor\" href=\"#学习\">#</a> 学习</h2>\n<ul>\n<li>今天学习了一些线性规划的有关知识，我发现在数据分析这个领域的某些概念并不和学科中的大概念相同，或者说，数据分析这个更注重实践的领域，其实了解这个东西是如何运作的就 OK 了。</li>\n<li>学习和实习要分开，也要联系起来，分开是指对于同一个内容的学习，可能实习的要求并不是很高，但是学习上会对我做要求，例如 python，在数据分析中我只需要能基本看懂代码就可以，因为最终的编写任务是交给 AI 完成的，但是在学校的考核中我还是要深入学习一下 python 的基本语法甚至进阶语法，因为考试的时候可没有 AI 帮我写代码；联系起来就是可以通过实习提升自己知识水平的广度，了解很多学校里学不到的东西，也可以通过学校的学习拓展实习所学的深度，例如未来我们应该会学习傅里叶变换，到时候学的就是公式和推导，应用，而不是简单的只有应用了。</li>\n<li>总体来说这一周有点摆烂。看公司里的活也挺多，晓蝶姐也挺忙的，就没好意思打扰</li>\n</ul>\n<h2 id=\"生活\"><a class=\"anchor\" href=\"#生活\">#</a> 生活</h2>\n<ul>\n<li>回来之后吃饭，刷了一会视频，从八点睡到了十一点。很奇怪。</li>\n<li>起床打了一把吃鸡，现在零点半，在写日记</li>\n<li>作息好像完全乱了。。这太扯了</li>\n<li>饿了。点了个塔斯汀，手残可乐撒了，不为打翻的可乐哭泣，高高兴兴吃掉剩下的。这可能就是成长吧</li>\n<li>有点撑得慌。</li>\n<li>明天就又可以回家了好开心，报名周六晚上打排球了，听说这次的人都挺厉害的</li>\n<li>破酒店凌晨一点十七莫名其妙断网了</li>\n<li>现在是八月一号凌晨两点半，睡意全无。上 csdn 搬运一些日记吧</li>\n</ul>\n<h4 id=\"记一下上周日回石家庄玩爸爸给的200块钱怎么花的\"><a class=\"anchor\" href=\"#记一下上周日回石家庄玩爸爸给的200块钱怎么花的\">#</a> 记一下上周日回石家庄玩爸爸给的 200 块钱怎么花的</h4>\n<ol>\n<li>三小瓶君乐宝酸奶     10 元</li>\n<li>火车站寄存柜            16 元</li>\n<li>牛肉面                       15 元</li>\n<li>打车                           25 元</li>\n<li>买水果                       14 元</li>\n<li>吃饭                  12+22.9+10+21.9+12+10+10 元</li>\n<li>午饭                           12 元</li>\n<li>拓展坞                       34 元</li>\n<li>火车票                       69 元</li>\n<li>怎么成三百多了。。不管了</li>\n</ol>\n<h2 id=\"游戏\"><a class=\"anchor\" href=\"#游戏\">#</a> 游戏</h2>\n<ul>\n<li>和平精英挂机做任务（吃了一把）</li>\n<li>火影日常</li>\n<li>突然想起来 ios 区还有一个小号，登录领一下自选 A 忍</li>\n<li>三角洲好几天没玩了</li>\n<li>单机游戏好久没玩了。为什么当时那么想玩。买了又不玩</li>\n</ul>\n",
            "tags": [
                "生活",
                "博客",
                "成长"
            ]
        },
        {
            "id": "https://tartar0us.github.io/tech/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/",
            "url": "https://tartar0us.github.io/tech/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/",
            "title": "线性规划速成",
            "date_published": "2025-07-30T16:00:00.000Z",
            "content_html": "<h2 id=\"线性规划的定义\"><a class=\"anchor\" href=\"#线性规划的定义\">#</a> 线性规划的定义</h2>\n<ul>\n<li>一个优化问题，如果其所有表达式（条件，目标，约束）都是线性的，那么它就是线性规划。</li>\n</ul>\n<h2 id=\"例题\"><a class=\"anchor\" href=\"#例题\">#</a> 例题</h2>\n<ol>\n<li>游戏每天提供 100 点体力，可通过通关 A、B、C 三张地图获取经验升级。</li>\n<li>通关奖励与消耗：\n<ul>\n<li>A 地图：20 点经验 / 次，消耗 4 点体力 / 次</li>\n<li>B 地图：30 点经验 / 次，消耗 8 点体力 / 次</li>\n<li>C 地图：45 点经验 / 次，消耗 15 点体力 / 次</li>\n</ul>\n</li>\n<li>约束条件：A、B、C 三张地图每天通关总次数最多 20 次。</li>\n</ol>\n<h2 id=\"解答\"><a class=\"anchor\" href=\"#解答\">#</a> 解答：</h2>\n<h3 id=\"我的思路\"><a class=\"anchor\" href=\"#我的思路\">#</a> 我的思路</h3>\n<ul>\n<li>刷 A 图的体力转换经验是 1：5，B 图 1：3.75，C 图 1：3</li>\n<li>所以 A 图最值得刷</li>\n<li>但是如果全刷 A 图会浪费 20 体力</li>\n<li>只能去掉几张 A，用 B 来补</li>\n<li>少 1A 多 1B 的差价是 4 体力，正好可以整除 20</li>\n<li>最终确定 15 次 A 图，5 次 B 图</li>\n</ul>\n<h2 id=\"几何意义\"><a class=\"anchor\" href=\"#几何意义\">#</a> 几何意义</h2>\n<h3 id=\"可行域\"><a class=\"anchor\" href=\"#可行域\">#</a> 可行域</h3>\n<ul>\n<li>由于我们的约束条件都是线性的，我们可以在一个平面直角坐标系中画出所有的条件，最终围成的区域内一定有我们的解。</li>\n<li>可行域一定是一个凸多边形</li>\n<li>有关几何意义的内容，大致理解就可以，不要丝扣，我们还是应该致力于解决问题。</li>\n</ul>\n<h2 id=\"决策变量\"><a class=\"anchor\" href=\"#决策变量\">#</a> 决策变量</h2>\n<ul>\n<li>问题中要确定的未知量</li>\n</ul>\n<h2 id=\"目标函数\"><a class=\"anchor\" href=\"#目标函数\">#</a> 目标函数</h2>\n<ul>\n<li>即最终想求解最值的函数</li>\n</ul>\n<h2 id=\"约束条件\"><a class=\"anchor\" href=\"#约束条件\">#</a> 约束条件</h2>\n<ul>\n<li>一般约束条件：各种实际条件限制，时间，资金等</li>\n<li>隐藏约束条件：函数、自变量的定义域限制、</li>\n</ul>\n<h2 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h2>\n<ul>\n<li>数学建模的过程，就是把题目翻译成数学语言的过程</li>\n<li>一组公式，加上对这组公式的含义的解释，就是一个数学模型</li>\n<li>模型求解可以用单纯形法</li>\n<li>建议用 python 或 matlab 求解</li>\n<li><strong>如果出现多个目标函数，即多目标规划问题，应保留其中一个目标函数，将剩余的函数转换为约束条件，变成单目标规划问题求解</strong></li>\n</ul>\n<h3 id=\"和多元函数求极值的关系\"><a class=\"anchor\" href=\"#和多元函数求极值的关系\">#</a> 和多元函数求极值的关系</h3>\n<p>拉格朗日数乘法（只能用于等式）</p>\n<h3 id=\"套公式代码\"><a class=\"anchor\" href=\"#套公式代码\">#</a> 套公式（代码）</h3>\n<ul>\n<li>让 kimi 写了个求解线性规划的代码，以后只需要把数据整理好写到三个表中就可以了，整理数据的活也可以给 AI。</li>\n<li>有一个小技巧，改表格的时候，把 csv 改成 txt，直接粘贴 AI 给的表格的文本文档形式，然后保存之后再改回 csv，非常的方便。</li>\n</ul>\n",
            "tags": [
                "数学",
                "数据分析",
                "数学"
            ]
        },
        {
            "id": "https://tartar0us.github.io/python%20demo/",
            "url": "https://tartar0us.github.io/python%20demo/",
            "title": "Python Demo",
            "date_published": "2025-07-30T07:30:00.000Z",
            "content_html": "<p>这是一个 Python 基础语法演示，包含复数运算、字符串格式化等内容。</p>\n<p>&lt;!–code￼0–&gt;</p>\n",
            "tags": [
                "技术",
                "Python",
                "编程"
            ]
        },
        {
            "id": "https://tartar0us.github.io/diary/7%E6%9C%8830%E6%97%A5%E6%97%A5%E8%AE%B0/",
            "url": "https://tartar0us.github.io/diary/7%E6%9C%8830%E6%97%A5%E6%97%A5%E8%AE%B0/",
            "title": "7月30日日记",
            "date_published": "2025-07-29T16:00:00.000Z",
            "content_html": "<h1 id=\"博客\"><a class=\"anchor\" href=\"#博客\">#</a> 博客</h1>\n<ul>\n<li>太懒了，博客的迁移大业目前还没有进行</li>\n<li>遇到的问题是代码不能在预览的网页上显示。可能是主题作者用了自定义的代码高亮配置，但是这个我又不会捣鼓。目前暂时想到的解决方案是上网（贴吧）求助大佬。</li>\n<li>哦忘说了，30 号这天晚上折腾了大概半个小时左右的平板，想用 termux 搭一个 linux 的虚拟机，跟着 b 站教程来，最后一步进不去了。再者看到耗电量变大挺快，然后应用的场景少之又少，就暂时放弃了。准备今天晚上下载一个 obsidian 在平板上，这样也可以写 markdown 文件了。</li>\n</ul>\n<h1 id=\"学习\"><a class=\"anchor\" href=\"#学习\">#</a> 学习</h1>\n<ul>\n<li>python 基本语法强化，把学过的内容写成 md 文件存了下来</li>\n<li>（其实这一天全摸鱼写博客了，又因为连续熬夜睡太晚没状态，听课的时候迷迷糊糊的）</li>\n</ul>\n<h1 id=\"生活\"><a class=\"anchor\" href=\"#生活\">#</a> 生活</h1>\n<ul>\n<li>两点睡的。越来越狠了熬夜</li>\n</ul>\n<h1 id=\"游戏\"><a class=\"anchor\" href=\"#游戏\">#</a> 游戏</h1>\n<ul>\n<li>六连胜上暗部。</li>\n<li>看到 xwx 上超影了，说实话有点羡慕</li>\n<li>我什么时候能上影啊。</li>\n</ul>\n<h3 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h3>\n",
            "tags": [
                "生活",
                "博客",
                "成长"
            ]
        },
        {
            "id": "https://tartar0us.github.io/diary/7%E6%9C%8829%E6%97%A5%E6%97%A5%E8%AE%B0/",
            "url": "https://tartar0us.github.io/diary/7%E6%9C%8829%E6%97%A5%E6%97%A5%E8%AE%B0/",
            "title": "7月29日记",
            "date_published": "2025-07-29T16:00:00.000Z",
            "content_html": "<h1 id=\"博客\"><a class=\"anchor\" href=\"#博客\">#</a> 博客</h1>\n<ul>\n<li>大概就是博客的搭建越来越完善，非常开心，看着博客里的文章一点点变多，非常有成就感。明天要把 csdn 中的所有日记都导出 md 挂到我的网站上，那个时候网页的内容就丰富多了。</li>\n<li>学了一点点 md 语法，我认为写博客是完全够用了。</li>\n<li>现在存在的问题就是前端的东西看不太懂，对 UI 的美化还是有些依赖 AI，缺点很明显，很容易像上次一样被 ai 直接全搞砸了。</li>\n</ul>\n<h1 id=\"实习\"><a class=\"anchor\" href=\"#实习\">#</a> 实习</h1>\n<ul>\n<li>学了 python 的部分基本语法，明天争取上午快速过完，然后再看看 excel，不能太墨迹，要不然一个暑假很快过去了什么也学不到。</li>\n<li>感觉贾总的公司的人们业务能力都不是很强，我在的这段时间好像闯祸两次了，就是遇到问题就停滞，甚至不跟上级汇报。很呆呆的感觉，可能程序员都这样吧。</li>\n<li>收藏了 b 站一个数据分析师的系列视频，以后可以跟着他学，多了解数据分析师需要学哪些东西，找对方向。</li>\n</ul>\n<h1 id=\"生活\"><a class=\"anchor\" href=\"#生活\">#</a> 生活</h1>\n<ul>\n<li>回酒店之后洗了衣服，有进步。</li>\n<li>晚饭吃的塔斯汀，虽然不是很健康但是爽了。</li>\n<li>睡得又有点晚了。无可厚非，今天基本没有在浪费时间。</li>\n<li>但是好多天没读书了。</li>\n<li>代办有一些还没做，明天得着手弄了</li>\n<li>以后坚决不能这样，实习每天只睡四五个小时太折磨人了，（但是今天好像是最近一周之内睡得最早的一次）以后坚决不能这么熬夜了。</li>\n</ul>\n<h1 id=\"游戏\"><a class=\"anchor\" href=\"#游戏\">#</a> 游戏</h1>\n<ul>\n<li>火影日常 + 上忍二<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow></mrow><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n",
            "tags": [
                "生活",
                "博客",
                "成长"
            ]
        },
        {
            "id": "https://tartar0us.github.io/tech/python%20demo/",
            "url": "https://tartar0us.github.io/tech/python%20demo/",
            "title": "python demo1",
            "date_published": "2025-07-29T16:00:00.000Z",
            "content_html": "<p>&lt;!–code￼0–&gt;</p>\n<h3 id=\"写函数的时候用print输出好还是用return输出好\"><a class=\"anchor\" href=\"#写函数的时候用print输出好还是用return输出好\">#</a> 写函数的时候用 print 输出好还是用 return 输出好？</h3>\n<h5 id=\"一-用return-的优势\"><a class=\"anchor\" href=\"#一-用return-的优势\">#</a> 一、用 return 的优势</h5>\n<ol>\n<li>\n<p><strong>单一职责原则</strong><br />\n函数的核心职责是 “计算数据”（实现加法逻辑），而 “输出结果” 属于展示层面的行为。第一种方式中， <code>plus</code>  函数专注于计算  <code>a + b</code>  的结果并通过  <code>return</code>  返回，把 “计算” 和 “输出” 的职责分开，符合编程里的<strong>单一职责原则</strong>，函数功能更纯粹、清晰。<br />\n比如，后续如果不想打印结果，而是要把这个和用于其他计算（如参与更复杂的公式、存入列表等），直接使用  <code>return</code>  的结果即可，灵活性更高。</p>\n</li>\n<li>\n<p><strong>结果可复用</strong><br />\n <code>return</code>  返回的是一个明确的值，这个值可以被调用处灵活处理：既可以用  <code>print</code>  输出，也能赋值给变量参与其他逻辑。例如：</p>\n</li>\n</ol>\n<p>python</p>\n<p>运行</p>\n<p>&lt;!–code￼1–&gt;</p>\n<p>如果是第二种方式（函数内部直接  <code>print</code>  ），就无法直接获取计算结果做后续处理，函数的复用性大打折扣。</p>\n<ol start=\"3\">\n<li><strong>符合函数设计理念</strong><br />\n函数的本质是 “输入一些数据，经过处理后输出（返回）另一些数据”， <code>return</code>  是实现这一流程的标准方式。它清晰地界定了函数的输入输出，让代码逻辑更易理解、维护，其他人阅读代码时，能快速知道函数会产出什么结果。</li>\n</ol>\n<h3 id=\"作用域\"><a class=\"anchor\" href=\"#作用域\">#</a> 作用域</h3>\n<ul>\n<li>函数中如果定义了变量，那么这个变量就只能在函数内使用，是一个局部变量，如果在函数外使用会报错</li>\n<li>如果局部变量与全局变量同名，在函数中优先调用局部变量，除非声明 global XXXX</li>\n<li>for 循环里的变量可以在循环外使用，虽然可以但是不建议，这不标准</li>\n</ul>\n<h3 id=\"for循环体\"><a class=\"anchor\" href=\"#for循环体\">#</a> for 循环体</h3>\n<ul>\n<li>python 中的 for 循环和 c 语言中的 for 循环有较大差别，c 语言中 for 后面的括号跟着执行条件，在执行循环之前先判断条件。而 python 中的 for 指令默认遍历，如果想要加条件需要在循环体中加。</li>\n</ul>\n",
            "tags": [
                "技术",
                "Python"
            ]
        },
        {
            "id": "https://tartar0us.github.io/tech/markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/",
            "url": "https://tartar0us.github.io/tech/markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/",
            "title": "markdown语法学习",
            "date_published": "2025-07-29T15:31:00.000Z",
            "content_html": "<h1 id=\"md基本语法\"><a class=\"anchor\" href=\"#md基本语法\">#</a> md 基本语法</h1>\n<ul>\n<li>井号来设置标题，例如一个 #加空格就是一级标题</li>\n</ul>\n<h1 id=\"我是一级标题\"><a class=\"anchor\" href=\"#我是一级标题\">#</a> 我是一级标题</h1>\n<h2 id=\"我是二级标题\"><a class=\"anchor\" href=\"#我是二级标题\">#</a> 我是二级标题</h2>\n<h3 id=\"我是三级标题\"><a class=\"anchor\" href=\"#我是三级标题\">#</a> 我是三级标题</h3>\n<h4 id=\"我是四级标题\"><a class=\"anchor\" href=\"#我是四级标题\">#</a> 我是四级标题</h4>\n<h5 id=\"我是五级标题\"><a class=\"anchor\" href=\"#我是五级标题\">#</a> 我是五级标题</h5>\n<h6 id=\"我是六级标题\"><a class=\"anchor\" href=\"#我是六级标题\">#</a> 我是六级标题</h6>\n<p>…</p>\n<ul>\n<li>在 obsidian 中暂时不用担心文章 title 和日期之类的，因为有快捷按键可以设置</li>\n<li>好像我目前除了会写个标题和正文之外不会别的了（）</li>\n<li>两个 *（星号）之间的字体是斜体，例如：<em>你好</em></li>\n<li>两个～（波浪线）之间的字是一段被删除线标记的文本 例如：<s>hell0</s></li>\n</ul>\n<h1 id=\"下面是ai生成的\"><a class=\"anchor\" href=\"#下面是ai生成的\">#</a> 下面是 AI 生成的</h1>\n<h3 id=\"三-文本样式\"><a class=\"anchor\" href=\"#三-文本样式\">#</a> 三、文本样式</h3>\n<ul>\n<li><strong>粗体</strong>：用两个星号 <code>**</code>  或两个下划线 <code>__</code> 包围文字。</li>\n</ul>\n<p>markdown</p>\n<p>&lt;!–code￼0–&gt;</p>\n<ul>\n<li>\n<p><em>斜体</em>：用一个星号 <code>*</code>  或一个下划线 <code>_</code> 包围文字。</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼1–&gt;</p>\n</li>\n<li>\n<p><s>删除线</s>：用两个波浪号 <code>~~</code>  包围文字。</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼2–&gt;</p>\n</li>\n</ul>\n<h3 id=\"四-列表\"><a class=\"anchor\" href=\"#四-列表\">#</a> 四、列表</h3>\n<ul>\n<li>\n<p><strong>无序列表</strong>：使用 <code>-</code> 、 <code>+</code>  或 <code>*</code>  作为列表标记。</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼3–&gt;</p>\n<p>或者</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼4–&gt;</p>\n<p>或者</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼5–&gt;</p>\n</li>\n<li>\n<p><strong>有序列表</strong>：使用数字加点作为列表标记。</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼6–&gt;</p>\n</li>\n</ul>\n<h3 id=\"五-链接\"><a class=\"anchor\" href=\"#五-链接\">#</a> 五、链接</h3>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼7–&gt;</p>\n<p>例如：</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼8–&gt;</p>\n<h3 id=\"六-图片\"><a class=\"anchor\" href=\"#六-图片\">#</a> 六、图片</h3>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼9–&gt;</p>\n<p>例如：</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼10–&gt;</p>\n<h3 id=\"七-引用\"><a class=\"anchor\" href=\"#七-引用\">#</a> 七、引用</h3>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼11–&gt;</p>\n<p>例如：</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼12–&gt;</p>\n<h3 id=\"八-代码\"><a class=\"anchor\" href=\"#八-代码\">#</a> 八、代码</h3>\n<ul>\n<li>\n<p><strong>行内代码</strong>：用反引号 <code>`</code>  包围代码。</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼13–&gt;</p>\n</li>\n<li>\n<p><strong>代码块</strong>：用三个反引号 <code>```</code>  包围代码块。</p>\n</li>\n<li>\n<p><em>反引号是键盘上的波浪线！！！</em></p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼14–&gt;</p>\n</li>\n</ul>\n<h3 id=\"九-表格\"><a class=\"anchor\" href=\"#九-表格\">#</a> 九、表格</h3>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼15–&gt;</p>\n<h3 id=\"十-分隔线\"><a class=\"anchor\" href=\"#十-分隔线\">#</a> 十、分隔线</h3>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼16–&gt;</p>\n<p>或者</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼17–&gt;</p>\n<h3 id=\"十一-脚注1\"><a class=\"anchor\" href=\"#十一-脚注1\">#</a> 十一、脚注 [^1]</h3>\n<p>在需要添加脚注的地方插入 <code>[^1]</code> ，然后在文档末尾添加脚注内容。</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼18–&gt;</p>\n<h3 id=\"十二-html标签\"><a class=\"anchor\" href=\"#十二-html标签\">#</a> 十二、HTML 标签</h3>\n<p>Markdown 支持在文档中直接插入 HTML 标签，例如：</p>\n<p>markdown</p>\n<p>复制</p>\n<p>&lt;!–code￼19–&gt;</p>\n<p>好吧我说实话，ai 生成的还是不能直接复制粘贴，网站上还是不能正确显示。等需要的时候来 md 里边看吧，等哪天看不下去了再改一下格式整理一下</p>\n",
            "tags": [
                "技术",
                "博客",
                "md"
            ]
        },
        {
            "id": "https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/",
            "url": "https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/",
            "title": "数据分析",
            "date_published": "2025-07-28T16:00:00.000Z",
            "content_html": "<blockquote>\n<p>这是一段引用文字</p>\n</blockquote>\n<h2 id=\"数据分析学习路径\"><a class=\"anchor\" href=\"#数据分析学习路径\">#</a> 数据分析学习路径</h2>\n<h3 id=\"需要掌握的知识\"><a class=\"anchor\" href=\"#需要掌握的知识\">#</a> 需要掌握的知识</h3>\n<ul>\n<li>理论知识</li>\n<li>业务知识（实践中学习）</li>\n</ul>\n<h3 id=\"学习的五个层次\"><a class=\"anchor\" href=\"#学习的五个层次\">#</a> 学习的五个层次</h3>\n<p><img data-src=\"/images/pic.png\" alt=\"我的背景图\" /></p>\n<p>晓蝶姐说 :</p>\n<blockquote>\n<p>&quot;现在都是 ai 写代码了，我建议你学 python 语法的话能先看懂他写的就行，不用特别细致，找个项目快速过一遍整个流程，后边再具体的去学语法或者流程中的某个具体知识&quot;</p>\n</blockquote>\n<h3 id=\"数据分析师的python要求\"><a class=\"anchor\" href=\"#数据分析师的python要求\">#</a> 数据分析师的 python 要求</h3>\n<ul>\n<li>\n<p>1. 掌握 python 基本语法</p>\n</li>\n<li>\n<p>2. 会基本使用 pandas</p>\n</li>\n<li></li>\n</ul>\n<h3 id=\"数据分析师的excel要求\"><a class=\"anchor\" href=\"#数据分析师的excel要求\">#</a> 数据分析师的 excel 要求</h3>\n<ul>\n<li>详情见这个视频</li>\n</ul>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW5xNHkxZDdyZz9zcG1faWRfZnJvbT0zMzMuNzg4LnZpZGVvcG9kLnNlY3Rpb25zJmFtcDt2ZF9zb3VyY2U9NTAyZWNhYjJmOGJlYzgwMGVjZDk0MTVmNzJmOGE5YTY=\">https://www.bilibili.com/video/BV1nq4y1d7rg?spm_id_from=333.788.videopod.sections&amp;vd_source=502ecab2f8bec800ecd9415f72f8a9a6</span></p>\n</blockquote>\n<ul>\n<li>透视表</li>\n<li>记忆一些常用且有用的快捷键</li>\n</ul>\n<h3 id=\"数据分析师的sql要求\"><a class=\"anchor\" href=\"#数据分析师的sql要求\">#</a> 数据分析师的 sql 要求</h3>\n<h4 id=\"不需要掌握的点\"><a class=\"anchor\" href=\"#不需要掌握的点\">#</a> 不需要掌握的点</h4>\n<ul>\n<li>数据写入</li>\n<li>数据修改</li>\n<li>数据删除</li>\n<li>游标</li>\n<li>触发器</li>\n<li>存储过程</li>\n<li>安全管理</li>\n<li>角色管理</li>\n<li>事务控制</li>\n<li>查询速度优化</li>\n</ul>\n<h4 id=\"需要掌握的基础部分\"><a class=\"anchor\" href=\"#需要掌握的基础部分\">#</a> 需要掌握的基础部分</h4>\n<ul>\n<li>select 数据提取</li>\n<li>where 语句使用</li>\n<li>表的内联外联</li>\n<li>排序和去重</li>\n<li>SQL 的书写规则</li>\n<li>分组 子查询</li>\n<li>聚合函数</li>\n</ul>\n<h4 id=\"需要掌握的进阶部分\"><a class=\"anchor\" href=\"#需要掌握的进阶部分\">#</a> 需要掌握的进阶部分</h4>\n<ul>\n<li>case when 的用法</li>\n<li>窗口函数如何使用</li>\n<li>sql 的执行顺序</li>\n<li>变量的使用</li>\n<li>分组查询严格模式</li>\n<li>空值的影响处理</li>\n<li>count (*) 和 count（列）</li>\n<li>exist</li>\n<li>临时表</li>\n<li>自联接</li>\n<li>文本时间函数</li>\n</ul>\n<h4 id=\"sql三个重点\"><a class=\"anchor\" href=\"#sql三个重点\">#</a> sql 三个重点</h4>\n<ul>\n<li>沟通好，明确需求，避免返工</li>\n<li>写好的 sql 语句需要备份</li>\n<li>sql 是一种语言，mysql 和 livesql 是工具</li>\n</ul>\n<h2 id=\"数据分析的主要流程\"><a class=\"anchor\" href=\"#数据分析的主要流程\">#</a> 数据分析的主要流程</h2>\n<h3 id=\"一-数据预处理\"><a class=\"anchor\" href=\"#一-数据预处理\">#</a> 一、数据预处理</h3>\n<p>1. 对脏数据、空缺数据进行处理，填充或删除（只针对时序数据中的缺失）</p>\n<h3 id=\"二-数据分类\"><a class=\"anchor\" href=\"#二-数据分类\">#</a> 二、数据分类</h3>\n<ol>\n<li>分成两个集，训练集和测试集，一般比例为 8：2，随机分配</li>\n</ol>\n<h3 id=\"三-模型建立还有可能不是模型\"><a class=\"anchor\" href=\"#三-模型建立还有可能不是模型\">#</a> 三、模型建立（还有可能不是模型）</h3>\n<p>模型是通过经验，让机器吃这些数据，然后预测未来的情况，而另一种办法是直接同数据中计算出公式，未来的预测直接用公式计算解决（这种方法称为机理）</p>\n<p>1. 运用各种模型，随机森林，xgboost</p>\n<h3 id=\"四-结果分析\"><a class=\"anchor\" href=\"#四-结果分析\">#</a> 四、结果分析</h3>\n<ul>\n<li>\n<p>精确率，召回率等</p>\n</li>\n<li>\n<p>实用的数据库工具：Navicat Premium</p>\n</li>\n</ul>\n<h3 id=\"五-可能存在的盲点或信息差\"><a class=\"anchor\" href=\"#五-可能存在的盲点或信息差\">#</a> 五、可能存在的盲点或信息差</h3>\n<ul>\n<li>，其语言是 sql，做数据分析最重要的是模型建立的部分，sql 只是一个在数据库中读取数据的工具</li>\n</ul>\n<h3 id=\"一些概念的定义\"><a class=\"anchor\" href=\"#一些概念的定义\">#</a> 一些概念的定义</h3>\n",
            "tags": [
                "技术",
                "Python",
                "实习",
                "数据分析",
                "SQL",
                "md"
            ]
        },
        {
            "id": "https://tartar0us.github.io/blog-meta/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/",
            "url": "https://tartar0us.github.io/blog-meta/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/",
            "title": "我的第二篇Hexo博客",
            "date_published": "2025-07-27T16:00:00.000Z",
            "content_html": "<p>第二篇 blog</p>\n<ul>\n<li>blog 更新指令</li>\n<li>hexo clean 清理当前缓存的静态页面</li>\n<li>hexo generate 生成新的静态页面</li>\n<li>hexo deploy 将生成的静态页面挂到 github 之类的网站进行代理</li>\n<li>hexo server 启动本地服务器，预览静态页面</li>\n</ul>\n",
            "tags": [
                "技术",
                "博客",
                "Hexo"
            ]
        },
        {
            "id": "https://tartar0us.github.io/blog-meta/hello-world/",
            "url": "https://tartar0us.github.io/blog-meta/hello-world/",
            "title": "Hello World",
            "date_published": "2025-07-26T02:51:28.060Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p>&lt;!–code￼0–&gt;</p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p>&lt;!–code￼1–&gt;</p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p>&lt;!–code￼2–&gt;</p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p>&lt;!–code￼3–&gt;</p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "技术"
            ]
        }
    ]
}