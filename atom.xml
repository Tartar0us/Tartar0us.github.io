<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Tartar0us.github.io</id>
    <title>Tartar0us&#39;s Blog</title>
    <subtitle>高台藏鼠辈，乡野卧麒麟</subtitle>
    <icon>https://tartar0us.github.io/images/favicon.ico</icon>
    <link href="https://Tartar0us.github.io" />
    <author>
      <name>Tartar0us</name>
    </author>
    <updated>2025-08-13T16:00:00.000Z</updated>
    <category term="1111111111111111111111" />
    <entry>
        <id>https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/%E5%AE%9E%E6%93%8D/%E7%AA%81%E5%87%BA%E4%BA%94%E4%B8%AA%E6%A8%A1%E5%9E%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%B8%AA/</id>
        <title>1.突出五个模型中的一个</title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/%E5%AE%9E%E6%93%8D/%E7%AA%81%E5%87%BA%E4%BA%94%E4%B8%AA%E6%A8%A1%E5%9E%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%B8%AA/"/>
        <content type="html">&lt;h3 id=&#34;给的材料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#给的材料&#34;&gt;#&lt;/a&gt; 给的材料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;第一张图片，里面是跑完模型之后五个模型的结果，有准确率和 MAE&lt;/li&gt;
&lt;li&gt;第二张图片，里面是三线表的格式，看出来是比较第一个模型和其他几个模型的差异，包括 &lt;strong&gt;准确率提升幅度&lt;/strong&gt; 和&lt;strong&gt;统计显著性&lt;/strong&gt;（f 和 p 值）&lt;/li&gt;
&lt;li&gt;暂时不知道上面两个粗体是什么意思。但是通过比较应该是可以看出来第一个模型比其他四个模型要好一些&lt;/li&gt;
&lt;li&gt;客户要求用方差分析&lt;/li&gt;
&lt;li&gt;都没给原数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分析过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析过程&#34;&gt;#&lt;/a&gt; 分析过程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;给的数据是图片，AI 没法识别，找到在线工具，图片转 xlsx。&lt;/li&gt;
&lt;li&gt;给 AI 指令，但是他还是不能识别表格，他自己写了一个 python 程序转成 csv（或者我上网找在线工具转成 csv 也行）&lt;/li&gt;
&lt;li&gt;出来分析报告之后简单对比了一下要求的格式，让它把 F 值精确了一下（一开始输出的是整数）&lt;/li&gt;
&lt;li&gt;上网找 word 里怎么做三线表
&lt;ul&gt;
&lt;li&gt;插入之后上边框和下边框都是黑色 1.5 磅&lt;/li&gt;
&lt;li&gt;中间是 0.75 磅&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;生成的分析报告是 txt，找在线工具转换成 word&lt;/li&gt;
&lt;li&gt;把三线表放到分析报告.docx 里&lt;/li&gt;
&lt;li&gt;给客户&lt;/li&gt;
&lt;li&gt;现在等着下一步的消息了&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="数据分析" scheme="https://tartar0us.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2025-08-13T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/8%E6%9C%8813%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>8月13日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/8%E6%9C%8813%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h2 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今天纯属是炸飞飞了，下午三点多跑路去修电脑，忘了问秦皇岛的售后了，最后花了两千多换了一个新的屏幕。不说别的，清灰还真的挺可以，而且最后修好了我也能最近就用着，不用等到开学了，非常的爽。&lt;/li&gt;
&lt;li&gt;长记性了，以后坚决不让我的天选姬碰一点水&lt;/li&gt;
&lt;li&gt;我操了这个空调怎么在喷水。&lt;/li&gt;
&lt;li&gt;这个 qq 电脑版为啥下载不了文件了，好像是在我更改了文件下载储存位置之后。好麻烦。明天得找时间把这个问题修复一下。&lt;/li&gt;
&lt;li&gt;这个周好像时间又很快就要过去了。非常的匆忙啊&lt;/li&gt;
&lt;li&gt;晚上不熬夜了，一会写完就睡，明天早起吃好饭然后再抓紧时间学习，你的时间越来越少了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;没有电脑，今天用平板学习，看了一点点数据结构，感觉还可以理解，就是卡在空间复杂度那里有点。&lt;/li&gt;
&lt;li&gt;然后复习了一小点 sql，发现一个特别好的课，但是看评论区说好像全看完基本上也就是入门的样子，没做到深入浅出，只做到了浅出，但是我觉得应付我未来寒假的实习应该够了。&lt;/li&gt;
&lt;li&gt;现在的目标非常明确，是用剩下的时间为我大二的学习和未来的实习做准备，一方面提升数据分析实习需要的硬实力，另一方面是要准备辅修计算机需要的知识，进行一个名为预习的运动，然后同时也学习一些有关机器学习的知识，但是感觉这个方面这两天并没有很上心。&lt;/li&gt;
&lt;li&gt;等机器学习的书到了之后应该会好一些吧。&lt;/li&gt;
&lt;li&gt;写日记的时候发现自己的打字速度好像有了显著的提升。很开心&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏&#34;&gt;#&lt;/a&gt; 游戏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;吃鸡没玩&lt;/li&gt;
&lt;li&gt;火影日常打完，打了几把匹配，有的纯打不过，有的能穿三。不知道为什么匹配机制这么逆天。但是每一把我都当作排位来打。还是比较认真的。&lt;/li&gt;
&lt;li&gt;模拟器调了一下设置，帧率设置成 144hz，太爽了，太丝滑了，之前过的是什么苦日子。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;反思&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反思&#34;&gt;#&lt;/a&gt; 反思&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;感觉在公司摸鱼的时间还是太多了。没有完全全身心的投入对计划的执行过程中去。&lt;/li&gt;
&lt;li&gt;回到住处之后还是一个劲的傻玩。不知道干一些有意义的事。&lt;/li&gt;
&lt;li&gt;答应王晓的整理晓明语录拖了太久太久，明天抽时间弄出来。&lt;/li&gt;
&lt;li&gt;不知不觉又到快一点了。好好休息，明天争取十点之前就写完日记，到时候感觉有点晚了就可以直接睡觉而不是再熬夜写日记了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;今天71k了也就是71w字十万字指日可待&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#今天71k了也就是71w字十万字指日可待&#34;&gt;#&lt;/a&gt; 今天 71k 了，也就是 7.1w 字，十万字指日可待&lt;/h1&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-08-12T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%9D%E5%AD%A6/</id>
        <title>数据结构初学</title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%9D%E5%AD%A6/"/>
        <content type="html">&lt;h2 id=&#34;python中的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python中的数据结构&#34;&gt;#&lt;/a&gt; Python 中的数据结构&lt;/h2&gt;
&lt;h3 id=&#34;from-英雄从哪里出来&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#from-英雄从哪里出来&#34;&gt;#&lt;/a&gt; from  英雄从哪里出来&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;元组：小括号，不可增删改&lt;/li&gt;
&lt;li&gt;列表：中括号，可以增删改查&lt;/li&gt;
&lt;li&gt;字典：花括号，可以增删改查，键值对一一对应&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;时间复杂度空间复杂度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时间复杂度空间复杂度&#34;&gt;#&lt;/a&gt; 时间复杂度空间复杂度&lt;/h3&gt;
&lt;p&gt;看整个代码运行了多少次，如果是常数次，比如 1，2，100 次，则时间复杂度为 O（1）&lt;br /&gt;
如果运行了 n 次，n 一般为输入的，那么时间复杂度为 O（n）&lt;br /&gt;
如果有两个循环，运行了 n 的平方次，那么时间复杂度为 O（n^2）&lt;br /&gt;
如果遍历的范围一次比一次小，二分法查找，那么时间复杂度为 O（log2n）&lt;strong&gt;这里是以 2 为底 n 的对数&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;时间复杂度陷阱&lt;/em&gt; ：&lt;br /&gt;
比较时间复杂度的前提是数据量足够庞大，有时候在较小的数据量下，时间复杂度高的方法反而运行的更快，这个要根据实际应用中的需要来判断，比如一个程序，跑 0.01 秒和 0.001 秒基本上没什么区别，那就没必要弄复杂的低复杂度算法，因为我们既要兼顾时间复杂度，又要兼顾代码的可读性。&lt;/p&gt;
&lt;p&gt;空间复杂度是说这个程序在运行的过程中占用的硬件设备的空间大小（很可能这个理解是错误的）&lt;/p&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="计科" scheme="https://tartar0us.github.io/tags/%E8%AE%A1%E7%A7%91/" />
        <updated>2025-08-12T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/MES/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/MES/"/>
        <content type="html">&lt;p&gt;&lt;em&gt;完全不会&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI 卡住了，运行的太慢了，算了&lt;/li&gt;
&lt;li&gt;我已拿到一份「原始需求描述」，需严格遵守 8 阶段开发流程。&lt;br /&gt;
必须先完成「需求澄清」→ 输出《业务流程文档》+《需求确认清单》。&lt;br /&gt;
再根据澄清结果生成《&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEueG4tLXhmcjhwOTQ3ZDdrci5tZA==&#34;&gt;1. 功能清单.md&lt;/span&gt;》（即系统前端目录树：一级模块 → 二级页面）。&lt;br /&gt;
然后预生成其余 7 个骨架文档（仅标题）：&lt;br /&gt;
1. 功能清单，md&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzIueG4tLXZocTMzaXk4dHh2YzdyaWpwdi5tZA==&#34;&gt;2. 业务流程文档.md&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzMueG4tLTRycnA5ZW90bmplNzV1MnkyZS5tZA==&#34;&gt;3. 技术选型报告.md&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzQueG4tLTdkdjI3YmpldDFhNDA4azdlYS5tZA==&#34;&gt;4. 架构设计文档.md&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzUueG4tLUVSLTdoOGNtMTBhdGpnZGtkLm1k&#34;&gt;5. 数据库 ER 图.md&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzYueG4tLUFQSS00cDhmOTlqb3k2YzE0ai5tZA==&#34;&gt;6.API 规范文档.md&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzcueG4tLXdxdm80OGEyMHdiZGEubWQ=&#34;&gt;7. 权限矩阵.md&lt;/span&gt;。&lt;br /&gt;
然后进入「原型设计」：为功能清单中的每个页面产出原型图 Markdown , 在原型图设计的时候在原型图文件夹下建立每个模块的子文件夹，每个页面单独作为一个文件，&lt;br /&gt;
每个  wireframes/*.md  必须包含：&lt;br /&gt;
 # 页面名称&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;## Markdown 伪图 （```markdown 伪图 代码块，纯 ASCII 矩形框）&lt;/p&gt;
&lt;p&gt;## 字段说明 （若有表单，用表格：字段 | 类型 | 必填 | 说明）&lt;/p&gt;
&lt;p&gt;## 交互逻辑 （有序列表或 Mermaid 时序图）&lt;/p&gt;
&lt;p&gt;## 跳转关系 （列表或 Mermaid 图）&lt;/p&gt;
&lt;p&gt;最后根据原型图文件夹下的每个页面生成相应的静态页面，静态页面的生成需要参考文件中的布局和样式，完全沿用其：响应式布局方式（Flex / Grid / 媒体查询）颜色变量、字体、圆角、阴影、按钮 / 表单 / 表格等基础样式使用的第三方组件库（如 Element-Plus / Ant-Design-Vue / Bootstrap-Vue 等）及 CDN 引入方式通用组件写法（Header、Sidebar、Card、Table、Modal、Breadcrumb、Loading 等）, 同时静态页面文件夹下也建立每个每个模块的子文件夹，然后每个文件夹下放置这个模块的子页面&lt;/p&gt;
</content>
        <updated>2025-08-12T03:51:25.713Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/Kaggle/%E9%93%B6%E8%A1%8C%E5%AE%9A%E6%9C%9F%E5%AD%98%E6%AC%BE%EF%BC%88%E6%B8%B8%E4%B9%90%E5%9C%BA%EF%BC%89/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/Kaggle/%E9%93%B6%E8%A1%8C%E5%AE%9A%E6%9C%9F%E5%AD%98%E6%AC%BE%EF%BC%88%E6%B8%B8%E4%B9%90%E5%9C%BA%EF%BC%89/"/>
        <content type="html">&lt;h2 id=&#34;kiro&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#kiro&#34;&gt;#&lt;/a&gt; kiro&lt;/h2&gt;
&lt;p&gt;version-1 准确率达到了 95%&lt;br /&gt;
version-3&lt;/p&gt;
&lt;h2 id=&#34;trae&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#trae&#34;&gt;#&lt;/a&gt; trae&lt;/h2&gt;
&lt;p&gt;version-2 准确率达到 89%（训练过程十分缓慢）&lt;/p&gt;
</content>
        <updated>2025-08-12T03:48:10.398Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/8%E6%9C%8812%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>8月12日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/8%E6%9C%8812%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h2 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今天算学了不少东西，上午弄了一下老爸给的任务，kiro 只做出来一个基本的框架，今天用的次数有点多，直接不干活了。晓蝶姐给了一套提示词，后天搞一下。你问我为啥是后天，因为今天晚上电脑进水了，明天要静置一天。静置一天之后看看怎么样吧。唉，以后喝完水一定要把盖子盖上。&lt;/li&gt;
&lt;li&gt;简单学了一下基本的 SQL 语法，这个 sqlzoo 真好玩，要是能登录保存进度就更好了。目前是没法记录进度的。今天学会了一些基本的读取数据的指令，虽然比较基础吧，但是起码起步了，感觉好像传说中的 sql 也没有想象中的那么难，万事开头难，只要开始了就有力量顺下去了。&lt;/li&gt;
&lt;li&gt;但是我发现我做什么事好像都喜欢一开始不动脑子的那一部分，比如打各种游戏，下围棋，学数学也是，喜欢那种从 0 到 0.01 的过程，就是一开始很新鲜，然后自己能在很快的时间内入门，了解一些基础的东西，但是再进一步学习好像很困难，稍微用一点脑子的我就不想学了。这是很错误的。这就是为什么我高中的物理化学生物那么差。一定要强行改变这个习惯，不然以后学什么都可能一开始三分热度，后面就不想学了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;昨天发烧了。上午窜了，中午实在没劲了，请假在酒店一觉睡到 5 点，出门买了药，然后就接着玩到一点，也没有困。还是比较健康的吧说实话&lt;/li&gt;
&lt;li&gt;太无聊了，想上暗网看看，结果发现不会上。放弃。&lt;/li&gt;
&lt;li&gt;说说电脑进水之后，第一件事倒过来控水，第二步擦拭，第三步晾干。&lt;/li&gt;
&lt;li&gt;华硕的售后是真不好找，大如石家庄这样的省会，也只有一家。我听着应该是离我住的地方不近。先静置一天再说吧。希望没事。&lt;strong&gt;记住这种情况千万不能用热吹风机吹&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#博客&#34;&gt;#&lt;/a&gt; 博客&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今天也是边学习边记笔记吧，写了不少东西，非常的开心，sql 学的很快，然后也是让 AI 给简单的制定了一个 8 月的学习计划，包括了实习的后期准备，进组的相关学习，还有辅修的准备，还是比较全面的&lt;/li&gt;
&lt;li&gt;记住你的 blog 主体是在桌面的文件夹上，u 盘里的只是很小的一部分备份&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;任务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#任务&#34;&gt;#&lt;/a&gt; 任务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;从明天开始不打吃鸡了，晚上回酒店之后洗洗衣服，把之前落下的任务都补一补，比如今日校园要发布的任务，晓明语录（依旧拖拉）然后还有想办法搞点钱。要趁早完成资本的原始积累。&lt;br /&gt;
还有就是博客的美化，虽然现在已经很好了，但是要想办法完善一些二级的功能，让网站的可交互性变高。同时记得登录一下 kaggle。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结类&#34;&gt;#&lt;/a&gt; 总结类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;依旧一拖再拖，欠着好多账没还。大一总结，月度总结，实习总结之类的。其实还是自己太容易把时间放到没用的事情上。要多专注与更重要的事。带的书也没怎么读说实话、加油孩子，你还有很长的路要走。&lt;/li&gt;
&lt;li&gt;依旧大爱仙尊  ：&lt;br /&gt;
&lt;em&gt;这个世界太大，我们都是小人物。但我会加油的，会一直努力的！&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-08-11T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/programming/SQL%E5%AD%A6%E4%B9%A0/</id>
        <title>SQL学习笔记</title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/programming/SQL%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;h1 id=&#34;8月12日&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8月12日&#34;&gt;#&lt;/a&gt; 8 月 12 日&lt;/h1&gt;
&lt;h2 id=&#34;基础查询语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础查询语法&#34;&gt;#&lt;/a&gt; 基础查询语法&lt;/h2&gt;
&lt;p&gt;SELECT * FROM world&lt;/p&gt;
&lt;p&gt;(输出整个 world 表格)&lt;/p&gt;
&lt;p&gt;SELECT name , gdp FROM world WHERE population &amp;gt;5000000&lt;/p&gt;
&lt;p&gt;(输出表格 world 中的 name 和 gdp 两列，筛选条件是 population 数量大于五百万)&lt;/p&gt;
&lt;p&gt;SELECT name FROM world&lt;br /&gt;
WHERE name LIKE &#39;C%ia&#39;&lt;/p&gt;
&lt;p&gt;(输出表格 world 中的 name 一列，筛选条件是名称由 C 开头，ia 结尾)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;% 是万能占位符，可以代表一个或多个字符，比如 “% d” 就是代表所有结尾是字母 d 的单词&lt;br /&gt;
同时，&amp;quot;__&amp;quot; 下划线也是万能占位符，表示一个字符，比如 “% o__o%” 代表所有包含 o 什么什么 o 这四个字母的单词&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;多重筛选&lt;br /&gt;
美國、印度和中國 (USA, India, China) 是人口又大，同時面積又大的國家。排除這些國家。&lt;/p&gt;
&lt;p&gt;顯示以人口或面積為大國的國家，但不能同時兩者。顯示國家名稱，人口和面積&lt;br /&gt;
 SELECT name, population ,area&lt;br /&gt;
FROM world&lt;br /&gt;
WHERE area &amp;gt;3000000 AND population &amp;lt;250000000&lt;br /&gt;
OR area&amp;lt;3000000 AND population&amp;gt;250000000&lt;/p&gt;
&lt;p&gt;因为 AND 的优先级高于 OR，所以会先运算 AND 再运算 OR，正好可以筛选出来只符合两个条件中一个的国家&lt;/p&gt;
&lt;h3 id=&#34;round函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#round函数&#34;&gt;#&lt;/a&gt; ROUND 函数：&lt;/h3&gt;
&lt;p&gt;ROUND(1000.22222,2)&lt;br /&gt;
 输出为： 1000.22 在 mysql 中是四舍五入到两位小数，但是别的数据库系统可能是直接截取到两位小数&lt;br /&gt;
&lt;em&gt;如果想保留一千为单位的整数，例如本来是 123300，编程 123000，你可以使用&lt;/em&gt;&lt;br /&gt;
 ROUND（float，-3）&lt;br /&gt;
如果 3 表示保留三位小数（千分位），那么 - 3 是不是就代表千位呢？（我真聪明）&lt;br /&gt;
或者可以用数学的办法&lt;br /&gt;
 ROUND（gdp/population/1000,0)* 1000 AS THOGPP&lt;br /&gt;
gdp/population ：计算人均 gdp&lt;br /&gt;
ROUND（gdp/population/1000,0) 人均 GDP 除以一千保留整数&lt;/p&gt;
&lt;p&gt;ROUND（gdp/population/1000,0)* 1000 人均 GDP 保留千位数&lt;br /&gt;
最后随便命了个名，起名为千 G 每人 ：THOusand Gdp Per Person &lt;s&gt;抽象&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL 报错又找不到问题的时候，想一想有没有少用括号或者用中文的字符&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;8月14日&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8月14日&#34;&gt;#&lt;/a&gt; 8 月 14 日&lt;/h2&gt;
&lt;p&gt;SELECT yr,subject,winner&lt;br /&gt;
FROM  nobel&lt;br /&gt;
WHERE (yr between 1980 AND 1989 )AND (subject = &#39;literature&#39;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面 sql 指令的意思是，罗列出 1980 年至 1989 年诺贝尔文学奖的年份，学科和获奖人&lt;br /&gt;
&lt;strong&gt; between 并没有左闭右开之类，直接说什么就是什么。爽&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WHERE subject NOT IN （‘literature’，‘peace’）&lt;br /&gt;
WHERE  NOT subject  IN （‘literature’，‘peace’）&lt;br /&gt;
上面两行代码具有相同的效力，但是意思不完全相同&lt;br /&gt;
第一行是说，subject 不在 文学奖或和平奖里&lt;br /&gt;
第二行是说，否定了 subject 在文学奖或者和平奖里&lt;/p&gt;
&lt;h3 id=&#34;非ascll编码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非ascll编码&#34;&gt;#&lt;/a&gt; 非 ascll 编码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;好烦。看不懂维基百科上的介绍&lt;/li&gt;
&lt;li&gt;太好了直接复制粘贴就可以&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;字符串中带单引号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串中带单引号&#34;&gt;#&lt;/a&gt; 字符串中带单引号&lt;/h3&gt;
&lt;p&gt;EUGENE O&#39;NEILL   这是一个诺贝尔奖获得者的名字，里面带一个单引号&lt;br /&gt;
表示方式一： name = ‘EUGENE O&#39;’NEILL‘  （把字符串中的单引号变成两个单引号）&lt;br /&gt;
表示方式二： name =“EUGENE O&#39;NEILL”  （外边用双引号括起来）&lt;/p&gt;
&lt;h2 id=&#34;排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#排序&#34;&gt;#&lt;/a&gt; 排序&lt;/h2&gt;
&lt;p&gt;ORDER BY xx    以 xx 为条件排序，&lt;br /&gt;
ORDER BY year DESC   以年份为条件降序排序（显示最新的）&lt;br /&gt;
ORDER BY year DESC ，winner    以年份为条件降序排序，同年份的用获奖者名字排序   ORDER BY -year ，winner  和上面那句一样的效果&lt;/p&gt;
&lt;h3 id=&#34;布尔值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#布尔值&#34;&gt;#&lt;/a&gt; 布尔值&lt;/h3&gt;
&lt;p&gt;subject in （‘literature’，‘chemistry’）算是一种布尔值，放到 select 语句中会生成一列 0 或者 1，判断这个诺贝尔奖获奖者的学科是不是属于化学或者物理。可以用这个来排序&lt;br /&gt;
 ORDER BY&lt;br /&gt;
CASE WHEN subject IN （‘literature’，‘chemistry’）THEN 1&lt;br /&gt;
ELSE 0&lt;br /&gt;
 因为 0 比 1 打，sql 默认升序排序，所以这个排序会把化学和物理的奖项排到输出列表的最后。&lt;/p&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="SQL" scheme="https://tartar0us.github.io/tags/SQL/" />
        <updated>2025-08-11T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/Kaggle/%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7%E5%A4%AA%E7%A9%BA%E9%A3%9E%E8%88%B9/</id>
        <title>泰坦尼克号太空飞船</title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/Kaggle/%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7%E5%A4%AA%E7%A9%BA%E9%A3%9E%E8%88%B9/"/>
        <content type="html">&lt;h2 id=&#34;分类和回归&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类和回归&#34;&gt;#&lt;/a&gt; 分类和回归&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;分类的目的是预测离散的类别标签&lt;/li&gt;
&lt;li&gt;回归的目的是预测连续的类别标签&lt;/li&gt;
&lt;li&gt;例如 gradient boosting 梯度提升模型，既可以在分类问题中使用，也可以在回归问题中使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;梯度提升是一个通用的机器学习框架不仅限于回归&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#梯度提升是一个通用的机器学习框架不仅限于回归&#34;&gt;#&lt;/a&gt; 梯度提升是一个&lt;strong&gt;通用的机器学习框架&lt;/strong&gt;，不仅限于回归：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;回归版本&lt;/strong&gt;:  &lt;code&gt;GradientBoostingRegressor&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;损失函数：平方损失、绝对损失等&lt;/li&gt;
&lt;li&gt;输出：连续数值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分类版本&lt;/strong&gt;:  &lt;code&gt;GradientBoostingClassifier&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;损失函数：对数损失 (log-loss)、指数损失等&lt;/li&gt;
&lt;li&gt;输出：类别概率 → 类别预测&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="机器学习" scheme="https://tartar0us.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/" />
        <updated>2025-08-11T01:09:16.743Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/8%E6%9C%889%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/8%E6%9C%889%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h1 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;回家之后啥也没干，洗了个澡，看了会电脑就 12 点多了。本来想着零点之前睡觉来着&lt;/li&gt;
&lt;li&gt;今天晚上去打球，中午十点半起床，吃席去了，因为是婚礼的女方回门（大办是在男方家，办完回女方家办叫回门），所以两个人说的词也非常的短，前摇 3 分钟就开始吃饭了。吃的还可以&lt;/li&gt;
&lt;li&gt;晚上 7 到十点打球，今天这一队还行，我接一传虽然还是有的时候飞但是感觉好不少了，有进步。发球基本上都过去了。但是今天也没什么拦网的机会。亮哥是二传，对我特别好，教我什么时候该在那个位置，在 5 号位就帮中间防吊人，在四号位，我方发球就跟着三号位和二传一起拦网。毕竟是比较高端的局，咱也没资格当二传&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;两个事，本来应该昨天说来着，但是昨天晚上不知道为什么犯懒，就写了一点日记就睡觉了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;进组了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进组了&#34;&gt;#&lt;/a&gt; 进组了&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;进了安爽导师的组。她说要是着急发论文可能发不了，我说没事， 发不发不重要，我想跟着学一学，为了以后研究生打打基础。&lt;/li&gt;
&lt;li&gt;她让我半年学完机器学习，给我推荐了两本书。《深入理解机器学习》和《机器学习》西瓜书&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;辅修&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#辅修&#34;&gt;#&lt;/a&gt; 辅修&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;韦姐推荐我修，导师说可能会很累，然后一般孩子们都是分数比较低。&lt;/li&gt;
&lt;li&gt;zmq 分析说导师看到的只是她教的学生，一般来说学她的那门课的肯定不是计科和控院的。所以大概率是商科这样。压力大可能是针对那些人来说的。当然累这个事是无法避免的。&lt;/li&gt;
&lt;li&gt;我们不要跟未来比，想着万一我学这么多未来并没有什么用之类的。我们只要追求当下的充实就够了。&lt;/li&gt;
&lt;li&gt;他说，你现在肯定不会后悔小时候小学初中的自己，肯定不会批判那个时候的自己。&lt;/li&gt;
&lt;li&gt;他还指出，如果自学的话，没有 ddl 在后面追着，学的动力并不是很足。并且我们的自律性不是很高，如果自学很容易被网上的各种诱惑耽误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;暂时就这么多了-晚安&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#暂时就这么多了-晚安&#34;&gt;#&lt;/a&gt; 暂时就这么多了。晚安&lt;/h2&gt;
&lt;h2 id=&#34;明天要做的事&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#明天要做的事&#34;&gt;#&lt;/a&gt; 明天要做的事&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;王晓明语录整理&lt;/li&gt;
&lt;li&gt;买机器学习两本书&lt;/li&gt;
&lt;li&gt;总结目前实习三周的全部所学，并制定未来三周详细的学习计划和实习计划&lt;/li&gt;
&lt;li&gt;规划一下实习每天晚上的时间，不要全部浪费&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2025-08-09T16:20:40.590Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/8%E6%9C%8810%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>8月10日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/8%E6%9C%8810%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h2 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今天回老家了&lt;/li&gt;
&lt;li&gt;中午喝了一下精酿。感觉有点度数，不好喝，苦苦的，不如信阳毛尖好喝（冰镇的）&lt;/li&gt;
&lt;li&gt;中午睡觉睡了两三个小时，挺管用&lt;/li&gt;
&lt;li&gt;别的好像没了，稀松平常的一天&lt;/li&gt;
&lt;li&gt;准备写的计划也没写。有点累了一会就睡觉&lt;/li&gt;
&lt;li&gt;卧槽了，无座就是真的无座啊。站了一个多小时。有点累稍微。&lt;/li&gt;
&lt;li&gt;无座让我认识了一位叔叔，他儿子今年高考，去的杭州师范，这个叔叔自己是河北工业大学的化学，然后北京化工大学的材料硕士，现在周末还出去接单子，在一个胶卷公司，叫乐凯好像，做材料，他说材料比其他的行业工资稍微低一些。他的认知里，计算机目前还是一个很景气的行业，但是我看到的好像并没有很吃香，因为晓蝶姐现在才一个月七八千的样子，23 年毕业之后就没涨过。叔叔说他一个朋友的女儿，学计算机，之前在快手一个月 5 万，现在在一个小公司 7w。我觉得这个还是幸存者偏差吧。这个叔叔人特别好，还借我充电宝。&lt;/li&gt;
&lt;li&gt;酒店的这个房间感觉光线有点弱&lt;/li&gt;
&lt;li&gt;团支书（wxx）15 号的生日，给她买了两本猎奇漫画。也不知道她喜欢什么别的，之前交流读书的时候她说喜欢读猎奇的书。买了伊藤润二的《鱼》和中国漫画家的《黑虫》黑虫还挺好看的，当时是高中的时候借的大胖（黄永康）的看的，他总是有很多钱买各种各样的漫画和小说，我非常羡慕。我需要省吃俭用好久才能狠下心来买一本小说。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;周末学啥习&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏&#34;&gt;#&lt;/a&gt; 游戏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;火影日常&lt;/li&gt;
&lt;li&gt;吃鸡战令 88 级了，首胜，钻石一&lt;/li&gt;
&lt;li&gt;你什么时候学习能跟打游戏一样有劲就好了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;晚安十一点半不算特别晚&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#晚安十一点半不算特别晚&#34;&gt;#&lt;/a&gt; 晚安，十一点半不算特别晚&lt;/h4&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-08-09T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/8%E6%9C%888%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>8月8日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/8%E6%9C%888%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h2 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今天晚上紫旭升学宴，下午请了半天假没去，四点五十落地德州&lt;/li&gt;
&lt;li&gt;晚上他一圈同学都挺厉害的，有一个医学的本硕博连读，还有一个哈工大&lt;/li&gt;
&lt;li&gt;晚上喝了一点点啤酒。这个东西好像是越喝越免疫，但是对身体也没什么好处说实在的&lt;/li&gt;
&lt;li&gt;吃饭的时候桌子对面也是一个火影玩家，单挑了四五把，感觉我跟我&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;有惊无险进组&lt;/li&gt;
&lt;li&gt;发了邮件之后，高铁上导师微信回我，问我想做哪方面的研究，她课题组研究的比较深。韦姐让我看看她的文章，极限写一个简单的回复。一开始想写一个有关她的研究的总结，但是最后来不及了，就简单表达了自己想进组学习的心愿和&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-08-07T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/8%E6%9C%887%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/8%E6%9C%887%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html"></content>
        <updated>2025-08-07T14:39:45.575Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/8%E6%9C%88%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/8%E6%9C%88%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
        <content type="html">&lt;p&gt;从 8 月 12 日到 9 月 1 日共 20 天，时间紧张但可通过「聚焦核心、强关联学习、高频实践」高效推进。核心原则：&lt;strong&gt;工具（Python/SQL）优先落地，数学服务应用，机器学习依附工具入门&lt;/strong&gt;，避免孤立学习，用「任务串联」提升效率。&lt;br /&gt;
以下是分阶段规划：&lt;/p&gt;
&lt;h3 id=&#34;第一阶段基础工具攻坚8月12日-8月21日共10天-目标掌握python数据分析核心库-sql基础查询同步渗透数学基础概念为后续应用铺垫&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一阶段基础工具攻坚8月12日-8月21日共10天-目标掌握python数据分析核心库-sql基础查询同步渗透数学基础概念为后续应用铺垫&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第一阶段：基础工具攻坚（8 月 12 日 - 8 月 21 日，共 10 天）&lt;/strong&gt; &lt;strong&gt;目标&lt;/strong&gt;：掌握 Python 数据分析核心库、SQL 基础查询，同步渗透数学基础概念（为后续应用铺垫）。&lt;/h3&gt;
&lt;h4 id=&#34;每日时间分配6-7小时&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#每日时间分配6-7小时&#34;&gt;#&lt;/a&gt; 每日时间分配（6-7 小时）：&lt;/h4&gt;
&lt;h5 id=&#34;python25小时语法库实操聚焦能用起来&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python25小时语法库实操聚焦能用起来&#34;&gt;#&lt;/a&gt; &lt;strong&gt;Python（2.5 小时）&lt;/strong&gt;：语法→库实操，聚焦「能用起来」&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第 1-2 天：补 Python 基础语法（变量 / 循环 / 函数 / 列表字典），用《Python 编程：从入门到实践》前 5 章或 B 站「黑马 Python 基础」快速过，重点练「列表推导式、函数参数」（数据分析高频用）。&lt;/li&gt;
&lt;li&gt;第 3-7 天：核心库实操（每天一个库 + 案例）
&lt;ul&gt;
&lt;li&gt;NumPy：数组创建、索引、广播（用「计算学生成绩平均分 / 标准差」案例练）；&lt;/li&gt;
&lt;li&gt;Pandas：Series/DataFrame 创建、缺失值处理（dropna/fillna）、分组聚合（groupby）、合并表（merge）（用「电商订单数据清洗 + 统计销量 TOP3 商品」案例练）；&lt;/li&gt;
&lt;li&gt;Matplotlib/Seaborn：折线图 / 柱状图 / 热力图（用「绘制月度销售额趋势 + 用户年龄分布」案例练）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 8-10 天：综合案例（每天 1 个）：
&lt;ul&gt;
&lt;li&gt;用 Pandas 处理「泰坦尼克号数据」（清洗 + 生存概率分析）；&lt;/li&gt;
&lt;li&gt;爬取简单数据（如豆瓣 TOP250 电影）+ 可视化（用 requests+BeautifulSoup，聚焦数据处理而非反爬）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;sql15小时聚焦查询逻辑跳过复杂函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql15小时聚焦查询逻辑跳过复杂函数&#34;&gt;#&lt;/a&gt; &lt;strong&gt;SQL（1.5 小时）&lt;/strong&gt;：聚焦「查询逻辑」，跳过复杂函数&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第 1-3 天：基础语法（SELECT/FROM/WHERE/GROUP BY/ORDER BY），用「SQLZoo」或「LeetCode 数据库入门题（1-20 题）」练，比如「查询年龄 &amp;gt; 30 的用户信息」「统计每个部门的平均工资」。&lt;/li&gt;
&lt;li&gt;第 4-7 天：进阶查询（JOIN 多表关联、子查询），用「学生 - 课程 - 成绩」三表练：「查询每门课的平均分及最高分学生姓名」。&lt;/li&gt;
&lt;li&gt;第 8-10 天：结合 Python（用 pandas.read_sql_query），实现「SQL 取数→Python 清洗可视化」闭环（比如从模拟的 MySQL 表中取销售数据，用 Python 画折线图）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;数学基础15小时只学数据分析机器学习必用部分跳过纯推导&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数学基础15小时只学数据分析机器学习必用部分跳过纯推导&#34;&gt;#&lt;/a&gt; &lt;strong&gt;数学基础（1.5 小时）&lt;/strong&gt;：只学「数据分析 / 机器学习必用」部分，跳过纯推导&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;微积分（第 1-5 天）：&lt;/li&gt;
&lt;li&gt;重点：导数（函数斜率，理解「变化率」，如用户增长速率）、偏导数（多变量函数的变化率，如价格和广告对销量的影响）、梯度（优化算法的基础，知道「梯度下降是找最小值」即可）。&lt;/li&gt;
&lt;li&gt;资源：3Blue1Brown《微积分的本质》（前 6 集）+ 动手算：用 Python 的 sympy 库求简单函数导数（如 f (x)=x²+2x 的导数）。&lt;/li&gt;
&lt;li&gt;线性代数（第 6-10 天）：&lt;/li&gt;
&lt;li&gt;重点：向量（数据的表示，如一个用户的特征向量）、矩阵（数据表的数学形式）、矩阵乘法（特征组合）、特征值 / 特征向量（PCA 降维的核心，知道「保留主要特征」即可）。&lt;/li&gt;
&lt;li&gt;资源：3Blue1Brown《线性代数的本质》（前 5 集）+ 用 NumPy 实操矩阵运算（如两个矩阵相乘、求特征值）。 - &lt;strong&gt;计算机辅修基础（0.5 小时）&lt;/strong&gt;：抓最核心的「数据结构入门」 - 每天 1 个概念：数组 / 链表（数据存储形式）、哈希表（字典的原理）、二叉树（了解即可），看《算法图解》前 3 章，用 Python 简单实现（如用列表模拟数组，用字典模拟哈希表）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第二阶段应用联动机器学习入门8月22日-8月31日共10天-目标用工具落地场景让数学服务实践机器学习聚焦流程和直观理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二阶段应用联动机器学习入门8月22日-8月31日共10天-目标用工具落地场景让数学服务实践机器学习聚焦流程和直观理解&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第二阶段：应用联动 + 机器学习入门（8 月 22 日 - 8 月 31 日，共 10 天）&lt;/strong&gt; &lt;strong&gt;目标&lt;/strong&gt;：用工具落地场景，让数学服务实践，机器学习聚焦「流程和直观理解」。&lt;/h3&gt;
&lt;h4 id=&#34;每日时间分配6-7小时-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#每日时间分配6-7小时-2&#34;&gt;#&lt;/a&gt; 每日时间分配（6-7 小时）：&lt;/h4&gt;
&lt;h5 id=&#34;pythonsql综合实践2小时用真实场景数据练闭环&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pythonsql综合实践2小时用真实场景数据练闭环&#34;&gt;#&lt;/a&gt; &lt;strong&gt;Python+SQL 综合实践（2 小时）&lt;/strong&gt;：用「真实场景数据」练闭环&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第 1-3 天：处理「Kaggle 公开数据集」（如鸢尾花、房价数据）：
&lt;ul&gt;
&lt;li&gt;用 SQL 从数据库取数（模拟业务库）；&lt;/li&gt;
&lt;li&gt;用 Pandas 清洗（缺失值 / 异常值）、特征工程（计算新特征，如「房价 / 面积 = 单价」）； - 用 Seaborn 画相关性热力图（看哪些特征影响房价）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 4-5 天：写一个小工具（如「自动化生成周报」）：
&lt;ul&gt;
&lt;li&gt;用 SQL 拉取上周数据，Pandas 计算关键指标（环比增长率），Matplotlib 生成图表，最后导出为 Excel/PDF。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;数学机器学习联动2小时用数学理解模型用python跑模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数学机器学习联动2小时用数学理解模型用python跑模型&#34;&gt;#&lt;/a&gt; &lt;strong&gt;数学 + 机器学习联动（2 小时）&lt;/strong&gt;：用数学理解模型，用 Python 跑模型&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;第 1-3 天：线性回归（机器学习入门首选，强关联线性代数）
&lt;ul&gt;
&lt;li&gt;原理：用线性代数理解「y=wx+b」是向量乘法；用微积分理解「损失函数（平方误差）的梯度下降优化」。&lt;/li&gt;
&lt;li&gt;实操：用 sklearn 库跑房价预测模型（从 Kaggle 下数据），输出 w（系数）和 b（截距），解释「哪个特征对房价影响最大」（如面积系数 0.8＞房间数系数 0.3）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 4-6 天：逻辑回归（分类问题，关联概率和导数）
&lt;ul&gt;
&lt;li&gt;原理：知道「用 Sigmoid 函数把输出映射到 0-1（概率）」，损失函数用交叉熵（不用推导，知道是衡量预测和真实的差距）。&lt;/li&gt;
&lt;li&gt;实操：用泰坦尼克号数据预测「是否生存」，看准确率，画混淆矩阵。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 7-10 天：简单了解其他模型（决策树、K-Means），知道「决策树是用规则分类」「K-Means 是聚类（无监督）」，用 sklearn 跑一遍，看结果即可（不深入调参）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;计算机辅修深化1小时结合数据分析场景学算法基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机辅修深化1小时结合数据分析场景学算法基础&#34;&gt;#&lt;/a&gt; &lt;strong&gt;计算机辅修深化（1 小时）&lt;/strong&gt;：结合数据分析场景学「算法基础」&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;重点：时间复杂度（如为什么 Pandas 的向量化运算比 for 循环快，因为 O (n) vs O (n²)）、排序算法（了解快速排序原理，知道 Pandas 的 sort_values 用的是高效算法）。 - 资源：B 站「王树森算法入门」前 5 集，结合 Python 代码看（如自己写一个简单的冒泡排序，对比 Pandas 的排序速度）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;复盘与补缺1小时每天结束前做-整理当天代码到github建一个数据分析实习准备仓库分pythonsql机器学习文件夹&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复盘与补缺1小时每天结束前做-整理当天代码到github建一个数据分析实习准备仓库分pythonsql机器学习文件夹&#34;&gt;#&lt;/a&gt; &lt;strong&gt;复盘与补缺（1 小时）&lt;/strong&gt;：每天结束前做 - 整理当天代码到 GitHub（建一个「数据分析实习准备」仓库，分 Python/SQL/ 机器学习文件夹）；&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;用 Notion 记「踩坑笔记」（如 Pandas 的 merge 容易重复列、SQL 的 JOIN 条件写错会导致数据膨胀）；&lt;/li&gt;
&lt;li&gt;每周日花 2 小时：用思维导图梳理关联（如「线性回归→矩阵乘法→NumPy 实现→房价预测案例」）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;关键提醒避免3个误区&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键提醒避免3个误区&#34;&gt;#&lt;/a&gt; &lt;strong&gt;关键提醒：避免 3 个误区&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;不追求「学完」，只追求「能用」&lt;/strong&gt;：比如 Python 不用学类 / 装饰器，SQL 不用学存储过程，数学不用推导公式，知道「是什么、怎么用」即可。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用「输出倒逼输入」&lt;/strong&gt;：每学一个工具 / 模型，必须动手写代码 + 生成一个「可展示的结果」（如图表、报告、GitHub 代码），这些能直接放进实习作品集。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活调整节奏&lt;/strong&gt;：如果某部分（如 SQL JOIN）卡壳，当天多花 30 分钟补，从后面的「了解性内容」（如决策树）里匀时间，优先保证核心工具（Python/Pandas/SQL 查询）落地。 按这个节奏，20 天后你能掌握：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Python 处理数据、可视化的完整流程； - SQL 解决 80% 的业务查询需求； - 理解数据分析中用到的数学概念（知道模型背后的直观逻辑）；&lt;/li&gt;
&lt;li&gt;跑通 2-3 个机器学习基础模型，能讲清流程和结果意义。 这些足够支撑数据分析实习的基础要求，且成果（代码、报告）可直接放进简历和 GitHub，比「学了但没产出」更有说服力。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2025-08-07T07:40:34.278Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/8%E6%9C%886%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>8月6日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/8%E6%9C%886%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h2 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;鸢尾花代码写完，发现有好多错误，改完之后运行依旧不行。准确率只有 30%&lt;/li&gt;
&lt;li&gt;最后开了个新 python 文件，不让 python 画图了，用 svm 和逻辑回归模拟了一下，svm 达到了 10）% 准确率&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一点睡的觉，还不是很晚&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-08-06T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/Kaggle/%E6%B3%A2%E5%A3%AB%E9%A1%BF%E6%88%BF%E4%BB%B7%E9%A2%84%E6%B5%8B/</id>
        <title>波士顿房价预测</title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/Kaggle/%E6%B3%A2%E5%A3%AB%E9%A1%BF%E6%88%BF%E4%BB%B7%E9%A2%84%E6%B5%8B/"/>
        <content type="html">&lt;h1 id=&#34;属于多变量回归类型问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属于多变量回归类型问题&#34;&gt;#&lt;/a&gt; 属于多变量回归类型问题&lt;/h1&gt;
&lt;h2 id=&#34;基础算法集成算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础算法集成算法&#34;&gt;#&lt;/a&gt; 基础算法 &amp;amp; 集成算法&lt;/h2&gt;
&lt;p&gt;在机器学习中，基础算法（也称为 “单一模型”）和集成算法是两类重要的模型类型，它们的核心区别在于：&lt;strong&gt;基础算法是独立工作的单一模型，而集成算法是通过组合多个基础模型来提升性能&lt;/strong&gt;。以下是具体分类及常见算法：&lt;/p&gt;
&lt;h3 id=&#34;一-基础算法单一模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-基础算法单一模型&#34;&gt;#&lt;/a&gt; &lt;strong&gt;一、基础算法（单一模型）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;基础算法是机器学习的 “building blocks”，直接从数据中学习规律，适用于不同类型的任务（分类、回归、聚类等）。&lt;/p&gt;
&lt;h4 id=&#34;1-线性模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-线性模型&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;线性模型&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;线性回归&lt;/strong&gt;：用于回归任务，通过拟合线性方程（ &lt;code&gt;y = wx + b&lt;/code&gt; ）预测连续值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逻辑回归&lt;/strong&gt;：用于二分类任务，通过 Sigmoid 函数将线性输出映射到 [0,1] 区间，表示分类概率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线性判别分析（LDA）&lt;/strong&gt;：用于分类，通过寻找最优投影方向，使不同类别数据的分离度最大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-树模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-树模型&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;树模型&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;决策树&lt;/strong&gt;：通过对特征进行一系列 “是 / 否” 的判断（如 “年龄 &amp;gt; 30？”），生成树状决策规则，可用于分类或回归。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ID3、C4.5、CART&lt;/strong&gt;：决策树的不同实现版本，主要区别在于特征选择标准（信息增益、信息增益比、基尼系数等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-基于距离的模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-基于距离的模型&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;基于距离的模型&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;K 近邻（KNN）&lt;/strong&gt;：通过计算新样本与训练集中 “最近的 k 个样本” 的距离，用多数投票（分类）或平均值（回归）预测结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;K-means&lt;/strong&gt;：聚类算法，将数据分为 k 个簇，使簇内样本相似度高、簇间相似度低。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-概率模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-概率模型&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;概率模型&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;朴素贝叶斯&lt;/strong&gt;：基于贝叶斯定理和 “特征条件独立假设” 的分类算法，适用于文本分类等场景（如垃圾邮件识别）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高斯混合模型（GMM）&lt;/strong&gt;：聚类算法，假设数据由多个高斯分布混合生成，用于发现数据的潜在分布。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-核方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-核方法&#34;&gt;#&lt;/a&gt; 5. &lt;strong&gt;核方法&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持向量机（SVM）&lt;/strong&gt;：通过寻找 “最大间隔超平面” 进行分类，可通过核函数（如 RBF 核）处理非线性数据，也可扩展到回归任务（SVR）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-神经网络基础版&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-神经网络基础版&#34;&gt;#&lt;/a&gt; 6. &lt;strong&gt;神经网络（基础版）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;感知机&lt;/strong&gt;：最简单的神经网络，由单个神经元组成，用于二分类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多层感知机（MLP）&lt;/strong&gt;：由输入层、隐藏层、输出层组成的浅层神经网络，可处理非线性问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;二-集成算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-集成算法&#34;&gt;#&lt;/a&gt; &lt;strong&gt;二、集成算法&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;集成算法通过&lt;strong&gt;组合多个基础模型的预测结果&lt;/strong&gt;（如投票、加权平均）来降低单一模型的偏差或方差，从而提升整体性能。核心思想是 “三个臭皮匠顶个诸葛亮”。&lt;/p&gt;
&lt;h4 id=&#34;1-bagging并行集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-bagging并行集成&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;Bagging（并行集成）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理&lt;/strong&gt;：通过对训练集进行有放回抽样（Bootstrap），生成多个不同的子数据集，分别训练多个基础模型，最后取平均或投票。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代表算法&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;随机森林（Random Forest）&lt;/strong&gt;：以决策树为基础模型，同时在特征选择上引入随机性（每次分裂只随机选部分特征），进一步降低过拟合风险。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-boosting串行集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-boosting串行集成&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;Boosting（串行集成）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理&lt;/strong&gt;：多个基础模型 “串行” 训练，每个新模型专注于修正前一个模型的错误（对前序模型预测错误的样本赋予更高权重），最后加权融合所有模型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代表算法&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AdaBoost&lt;/strong&gt;：通过调整样本权重和模型权重，逐步提升弱分类器的性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;梯度提升树（GBDT）&lt;/strong&gt;：以决策树为基础模型，通过梯度下降法最小化预测误差，是工业界常用的强模型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XGBoost、LightGBM、CatBoost&lt;/strong&gt;：GBDT 的工程优化版本，加入正则化、并行计算等机制，训练更快、性能更强。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-stacking堆叠集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-stacking堆叠集成&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;Stacking（堆叠集成）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理&lt;/strong&gt;：将多个基础模型的预测结果作为 “新特征”，输入到一个 “元模型”（如逻辑回归、线性回归）中，由元模型给出最终预测。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：灵活性高，可组合不同类型的基础模型（如 SVM + 决策树 + 神经网络），但实现较复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-voting投票集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-voting投票集成&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;Voting（投票集成）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理&lt;/strong&gt;：直接对多个基础模型的预测结果进行投票（分类任务）或加权平均（回归任务）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分类&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;硬投票&lt;/strong&gt;：选择得票最多的类别作为结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;软投票&lt;/strong&gt;：根据每个模型的预测概率加权求和，选择概率最高的类别。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; &lt;strong&gt;总结&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基础算法&lt;/strong&gt;是集成算法的 “零件”，各有优缺点（如决策树易过拟合，线性模型难以处理非线性数据）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;集成算法&lt;/strong&gt;通过组合基础算法，通常能获得更稳定、更优的性能，是竞赛和工业界的常用方案（如 XGBoost、随机森林）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;什么时候用基础算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么时候用基础算法&#34;&gt;#&lt;/a&gt; 什么时候用基础算法？&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据量小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要快速结果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要求模型可解释&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算资源有限&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;什么时候用集成算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么时候用集成算法&#34;&gt;#&lt;/a&gt; 什么时候用集成算法？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;追求高精度&lt;/li&gt;
&lt;li&gt;数据量充足&lt;/li&gt;
&lt;li&gt;不在乎计算时间&lt;/li&gt;
&lt;li&gt;可以接受 &amp;quot;黑盒&amp;quot; 模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;各个模型对此问题的解答&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#各个模型对此问题的解答&#34;&gt;#&lt;/a&gt; 各个模型对此问题的解答&lt;/h3&gt;
&lt;p&gt;KNN 回归 评估指标：&lt;br /&gt;
均方误差（MSE）: 9.74&lt;br /&gt;
 均方根误差（RMSE）: 3.12&lt;br /&gt;
 平均绝对误差（MAE）: 2.41&lt;br /&gt;
 决定系数（R²）: 0.83&lt;/p&gt;
&lt;h2 id=&#34;binary&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#binary&#34;&gt;#&lt;/a&gt; binary&lt;/h2&gt;
&lt;p&gt;binary 表示二进制&lt;br /&gt;
 binary classification 表示二分法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 KNN 的学习过程中遇到了 KD 树算法&lt;br /&gt;
 kd 是一种数据结构，常被用于快速搜索任务&lt;br /&gt;
 KD 树通过&lt;strong&gt;递归地对空间进行二分划分&lt;/strong&gt;（类似二叉树），将数据点组织成树结构，从而将搜索范围逐步缩小（理想情况下时间复杂度可降至 O (log n)）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性回归 评估指标：&lt;br /&gt;
均方误差（MSE）: 19.81&lt;br /&gt;
 均方根误差（RMSE）: 4.45&lt;br /&gt;
 平均绝对误差（MAE）: 3.23&lt;br /&gt;
 决定系数（R²）: 0.65&lt;/p&gt;
&lt;p&gt;支持向量回归 评估指标：&lt;br /&gt;
均方误差（MSE）: 15.29&lt;br /&gt;
 均方根误差（RMSE）: 3.91&lt;br /&gt;
 平均绝对误差（MAE）: 2.47&lt;br /&gt;
 决定系数（R²）: 0.73&lt;/p&gt;
&lt;p&gt;决策树回归 评估指标：&lt;br /&gt;
均方误差（MSE）: 20.29&lt;br /&gt;
 均方根误差（RMSE）: 4.50&lt;br /&gt;
 平均绝对误差（MAE）: 2.44&lt;br /&gt;
 决定系数（R²）: 0.64&lt;/p&gt;
&lt;p&gt;随机森林回归 评估指标：&lt;br /&gt;
均方误差（MSE）: 7.64&lt;br /&gt;
 均方根误差（RMSE）: 2.76&lt;br /&gt;
 平均绝对误差（MAE）: 1.91&lt;br /&gt;
 决定系数（R²）: 0.87&lt;/p&gt;
&lt;p&gt;梯度提升回归 评估指标：&lt;br /&gt;
均方误差（MSE）: 5.53&lt;br /&gt;
 均方根误差（RMSE）: 2.35&lt;br /&gt;
 平均绝对误差（MAE）: 1.85&lt;br /&gt;
 决定系数（R²）: 0.90&lt;/p&gt;
&lt;h3 id=&#34;图表的字体无法显示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图表的字体无法显示&#34;&gt;#&lt;/a&gt; 图表的字体无法显示&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h1 id=&#34;设置中文显示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置中文显示&#34;&gt;#&lt;/a&gt; 设置中文显示&lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;plt.rcParams[&amp;quot;font.family&amp;quot;] = [&amp;quot;SimHei&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, &amp;quot;Heiti TC&amp;quot;]&lt;br /&gt;
 plt.rcParams [&amp;quot;axes.unicode_minus&amp;quot;] = False  # 解决负号显示问题&lt;/p&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="机器学习" scheme="https://tartar0us.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/" />
        <category term="数据分析" scheme="https://tartar0us.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2025-08-06T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/programming/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/programming/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;h2 id=&#34;sklearn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sklearn&#34;&gt;#&lt;/a&gt; &lt;strong&gt;SKLEARN&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;from sklearn.model_selection import train_test_split&lt;/li&gt;
&lt;li&gt;&lt;code&gt;train_test_split&lt;/code&gt;  是 &lt;strong&gt;机器学习中划分训练集和测试集的核心工具&lt;/strong&gt;，作用是把原始数据集拆成两部分：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;训练集（train）&lt;/strong&gt;：用来训练模型（让模型学习数据规律）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;测试集（test）&lt;/strong&gt;：用来评估模型（验证模型在新数据上的效果）。&lt;br /&gt;
&lt;strong&gt;记住函数的用途，在整个 python 代码中能看懂就可以&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;一些单词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一些单词&#34;&gt;#&lt;/a&gt; 一些单词&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;DecisionTreeClassifier 决策树分类器（决定，树，分类的工具）&lt;/li&gt;
&lt;li&gt;LogisticRegression    逻辑回归 regression 回归&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2025-08-06T08:39:30.706Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/%E6%9C%AA%E5%91%BD%E5%90%8D/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/tech/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/%E6%9C%AA%E5%91%BD%E5%90%8D/"/>
        <content type="html"></content>
        <updated>2025-08-06T08:36:51.123Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/3%E6%9C%8821%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>3月21日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/3%E6%9C%8821%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;p&gt;互联网 +&lt;br /&gt;
 红旅赛道引用要准确 意识形态审查&lt;br /&gt;
发明专利 软著 论文 -&amp;gt; 知识产权 切记避免用老师的专利&lt;br /&gt;
队伍最多可以是十五人 要用团队中个人的专利&lt;br /&gt;
商业计划书 技术部分 6 7 页 其他全是和商业有关  政策背景  行业背景&lt;br /&gt;
产品展示 或者模型展示  或者动画展示&lt;br /&gt;
争取做出产品 投入市场  或者权威检测机构保证 各项指标达到标准&lt;br /&gt;
老师团队&lt;br /&gt;
组队不要着急 慢慢找需要的人&lt;br /&gt;
选一个项目：创新项目 国家的大政方针上&lt;br /&gt;
一号文件是关于农业生产的&lt;br /&gt;
如何在各行业中应用 AI 大模型&lt;br /&gt;
粮食安全&lt;br /&gt;
老人手环&lt;br /&gt;
秸秆生产成地膜&lt;br /&gt;
检测指标数据（身体健康数据）数据快速采集：调用大模型提出健康建议 乡村医疗&lt;br /&gt;
农村住房安全监管  特殊地方 地震多发地区 矿井开采塌陷区 山体滑坡  使用 AI 进行信息采集处理 监控  地面沉降&lt;br /&gt;
乡村非遗 IP 传承 （剧本杀、立体书）做宣传 创新&lt;br /&gt;
项目&lt;br /&gt;
结合生产实践 避免拿老师的课题 项目来源要盯住科技发展的应用&lt;br /&gt;
调研可以找身边的家人，各行各业的问题，解决了就是创新&lt;br /&gt;
家用核酸检测设备&lt;br /&gt;
创造没有的东西  解决存在的问题&lt;/p&gt;
&lt;p&gt;商业策划书&lt;br /&gt;
报项目之后网评 ppt-&amp;gt; 省赛 -&amp;gt; 网评 -&amp;gt; 国赛  这个过程中 ppt 很重要&lt;br /&gt;
题目：要求：按照 主标题 + 副标题 方式来命名，主标题控制在 3-6 字&lt;/p&gt;
&lt;p&gt;第一部分：项目背景：国家大政方针，行业背景，行业问题（行业痛点）&lt;br /&gt;
第二部分：产品分析：原理，组成，功能，硬件，软件，需要什么材料，怎么合成的，步骤是哪些&lt;br /&gt;
竞争分析&lt;br /&gt;
市场分析&lt;br /&gt;
商业模式以及营销策略 例如：批发零售模式&lt;br /&gt;
团队介绍  学科交叉 专业互补&lt;br /&gt;
融资以及财务分析&lt;br /&gt;
社会价值： 带来就业 引领教育  发展规划  （了解了社会现状 了解了行业 提出问题并解决了问题 ）&lt;/p&gt;
&lt;p&gt;---------------------------------- 分割线 --------------------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;上面是晚上听的大创宣讲会老师讲解的有关内容。&lt;/p&gt;
&lt;p&gt;现在是晚上九点半，周五的生活依旧是朴实无华且枯燥&lt;/p&gt;
&lt;p&gt;早八微积分听不懂，英语课水掉了。老师问我和 zoey 是不是情侣。我说不是，老师又说那可以发展一下，吓得我连忙说我有女朋友。我们只是玩的比较好的同事（班干部）关系。其实还有 leo，我们三个玩的比较好，但是是因为我俩在一排所以显得更亲近一点。我当然知道有了女朋友要和其他女生保持距离，但是也不应该因为有了女朋友就不能有其他异性的朋友了。把握好限度，朋友还是会有的。&lt;/p&gt;
&lt;p&gt;中午依旧上分。没法睡觉，舍友要不就是打瓦要不就是刷视频。只能同流合污了。导致这段时间下午或者晚上经常很困，但是晚上由于他们还没睡觉，我也没法睡觉。今天晚上我打算洗完澡就睡觉，不管他们打没打完游戏。明天学校有双选会，我要去看看，应该会对我的职业规划和对目前社会上的就业情况有一定的了解。明天下午平板就要到啦，非常的期待。希望无纸化学习可以让我更加努力吧。&lt;/p&gt;
&lt;p&gt;关于网站的事，今天中午终于是有了一点时间，加上下午四点近代史纲要（水课）的一点时间，看 b 站学了一下 github 如何部署自己的静态网站，终于是弄出来了，但是非常的简陋。没有啥功能，就只有一个弹窗。以后最好可以自学一下 css 和 javascript，还有 html。但是最近的事太多了。&lt;/p&gt;
&lt;p&gt;zmq 在叫着我，时刻提醒我参与各类竞赛之类的，但是我的绩点好像并不能很好地保持，并且我的专业课基本上跟没学一样，可能是因为上课困，很容易走神，学不进去，或者是太难了根本听不懂就放弃了。明天听完双选会我要复习微积分和解析几何。&lt;/p&gt;
&lt;p&gt;目前的情况：专业课知识（关系到绩点）&amp;gt; 一切&lt;/p&gt;
&lt;p&gt;竞赛我觉得都可以放一放。目前有统计建模，这个我打算放弃了。还有一周考计算机二级，这个真得学一学了。临时突击最好能让我过！！！要不亏死了。（其实也没咋学，说亏也不亏。）&lt;/p&gt;
&lt;p&gt;4 月份还有什么 cup 建模。目前有同学问我组队的事，在考虑。还要给 zoey 挑生日礼物，然后小林的生日礼物。大创什么的可以不着急。我也在东秦小帮上发过求捞，可能确实因为没什么能力所以没人要。其实这好像和我的目标又有所相悖了。我最想要的是健康和快乐，但是目前看来我的颈椎，腰椎和眼睛并不乐观。快乐也并不是大多数时候。好像所谓的快乐都是一些廉价的东西。&lt;/p&gt;
&lt;p&gt;晚安&lt;br /&gt;
 ————————————————&lt;br /&gt;
 版权声明：本文为 CSDN 博主「Kamui_0us」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。&lt;br /&gt;
原文链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0LzIzMDFfNzYzNjQ0NzAvYXJ0aWNsZS9kZXRhaWxzLzE0NjQyOTY1NA==&#34;&gt;https://blog.csdn.net/2301_76364470/article/details/146429654&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2025-08-06T01:10:08.084Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%202/</id>
        <title></title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/%E6%9C%AA%E5%91%BD%E5%90%8D%202/"/>
        <content type="html"></content>
        <updated>2025-08-06T01:10:07.503Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/diary/3%E6%9C%8823%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>3月23日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/diary/3%E6%9C%8823%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;p&gt;今天上午去参加画风筝放风筝的活动了，整体非常好，和 yyj 一起画了一个，我给痞老板画了个神威眼哈哈哈，但是由于风不是很大，所以最后放风筝的效果不是很好，但是是很美好的一个上午。（画风筝的空闲时间还上暗部了，不得不说私三代是真的恶心。带个解术复无敌了）。&lt;/p&gt;
&lt;p&gt;下午三点到五点排球训练，二传传的有点进步，和研究生打了友谊赛，上场的时候全程高压。心脏都快跳出来了。总之就是非常的紧张，最后效果还好，能接到球，拦网也成功了几次。发球出界两次。。。其他还好。&lt;/p&gt;
&lt;p&gt;晚自习用平板写了解析几何的作业，微积分一会写。&lt;/p&gt;
&lt;p&gt;女朋友今天上午和朋友去奥德乐吃饭了，看了一下是绿茶餐厅的双人餐，具体叫什么忘了，两个人 114 块钱，还可以。小林相中了一个生日礼物，200 多。买吧没关系，总能有办法吃饭的哈哈哈，虽然现在已经似乎有点负债累累的感觉了（）。没关系，朋友不就是这么弄起来的。&lt;/p&gt;
&lt;p&gt;目前还在有点纠结的是想找机会挣点钱，我能想到的是校园跑代跑和刷水课，或者代课，但是在网上发布了之后并没有人找我。其他的网络项目好像也不是很好弄。什么短剧推广啊，带货挂橱窗啊，评论区有交钱拜师带着你弄的，实际上他赚钱赚的就是你交的学费，没有流量的话你的收益很少的。基金这周五收盘的时候赔到 290 了，收益也是说没就没，这个东西还是不太稳定啊。&lt;/p&gt;
&lt;p&gt;得多想想办法，清明节不干别的了，好好休息，学习，锻练，或者找点能挣钱的活（并非刚需）。&lt;/p&gt;
&lt;p&gt;这篇文章的格式实在是混乱，甚至没有每个自然段开头空两格，但是这已经无所谓了。&lt;/p&gt;
&lt;p&gt;班里好像有同学帮人做 ppt 能挣点钱，可以跟他打探一下消息！今天就写到这吧，现在是八点十五了，同学们都陆续走了，我得开始弄微积分作业了。&lt;/p&gt;
</content>
        <updated>2025-08-06T01:10:06.868Z</updated>
    </entry>
</feed>
