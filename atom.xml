<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Tartar0us.github.io</id>
    <title>Tartar0us&#39;s Blog</title>
    <subtitle>高台藏鼠辈，乡野卧麒麟</subtitle>
    <icon>https://tartar0us.github.io/images/favicon.ico</icon>
    <link href="https://Tartar0us.github.io" />
    <author>
      <name>Tartar0us</name>
    </author>
    <updated>2025-07-31T16:00:00.000Z</updated>
    <category term="1111111111111111111111" />
    <entry>
        <id>https://tartar0us.github.io/%E7%95%99%E5%AD%A6/</id>
        <title>留学信息</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E7%95%99%E5%AD%A6/"/>
        <content type="html">&lt;h2 id=&#34;目标院校&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目标院校&#34;&gt;#&lt;/a&gt; 目标院校&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;新加坡国立大学（NUS）&lt;/li&gt;
&lt;li&gt;新加坡南洋理工大学（NTU）三位学长学姐都在这里毕业&lt;/li&gt;
&lt;li&gt;香港大学&lt;/li&gt;
&lt;li&gt;香港中文大学&lt;/li&gt;
&lt;li&gt;香港科技大学&lt;/li&gt;
&lt;li&gt;帝国理工学院（IC）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;需要准备的内容按照重要程度排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需要准备的内容按照重要程度排序&#34;&gt;#&lt;/a&gt; 需要准备的内容（按照重要程度排序）&lt;/h2&gt;
&lt;h4 id=&#34;1绩点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1绩点&#34;&gt;#&lt;/a&gt; 1. 绩点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;港新平均在 85 分，即在收到 offer 的学生中，存在 82 分和 90 分的，一般超过 85 分比较稳妥，越高越有竞争力&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2语言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2语言&#34;&gt;#&lt;/a&gt; 2. 语言&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;这个算一个标准，一个要求，港新是总分 6.5 就可以&lt;/li&gt;
&lt;li&gt;但是帝国理工要求比较高，要 7，并且每一个小分都要 6.5 以上&lt;/li&gt;
&lt;li&gt;韦姐高考英语 146，自学的 7.5 分，太强哩&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3实习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3实习&#34;&gt;#&lt;/a&gt; 3. 实习&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;与所申请项目方向有关的实习，比如想申请 CS（computer science）最好要有互联网公司算法的实习经历，想申请数分，就要有数据分析相关的实习经历&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4kaggle&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4kaggle&#34;&gt;#&lt;/a&gt; 4.kaggle&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;此条不具有通用性&lt;/li&gt;
&lt;li&gt;kaggle 是一个数据分析有关的比赛，如果打带奖金的比赛获奖，可以起到提升背景的作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5学术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5学术&#34;&gt;#&lt;/a&gt; 5. 学术&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;发论文绝对有利于申请，但是这个对我来说有点太难了。我一个绩点 3.7 的学生感觉不太可能在学术方面有所建树&lt;br /&gt;
有&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="学业" scheme="https://tartar0us.github.io/categories/%E5%AD%A6%E4%B8%9A/" />
        <category term="留学" scheme="https://tartar0us.github.io/tags/%E7%95%99%E5%AD%A6/" />
        <updated>2025-07-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</id>
        <title>非线性规划</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
        <content type="html">&lt;h2 id=&#34;非线性规划定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非线性规划定义&#34;&gt;#&lt;/a&gt; 非线性规划定义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;当目标函数和约束条件中有一个是决策变量 x 的非线性表达式时，这个数学求解问题是非线性规划问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;解法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解法&#34;&gt;#&lt;/a&gt; 解法&lt;/h2&gt;
&lt;p&gt;目前没有统一的解法，都是在选定决策变量的初始值之后搜索方法&lt;/p&gt;
</content>
        <updated>2025-07-31T06:48:28.358Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/7%E6%9C%8831%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>7月31日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/7%E6%9C%8831%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h2 id=&#34;博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#博客&#34;&gt;#&lt;/a&gt; 博客&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;看着文件夹里的 md 文件越来越多，很有成就感&lt;/li&gt;
&lt;li&gt;上班的时候只要看教学时频或者看字幕双眼迷离了就开始捣鼓博客，可以提神。因为听人讲可有时候不动脑子，很快就会困了（总之还是注意力不集中呗）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;我要给我的博客定一个标准&lt;/strong&gt;：比如我每次记录的时间节点是什么。目前有每天的日记，还有一篇年度总结，但是我想每个月也可以写，每个学期也可以写，每个学年也可以写。虽说有点乱吧。&lt;/li&gt;
&lt;li&gt;一会如果吃完饭还有时间我要写一个以学年为单位的总结，后面找时间补 7 月的总结&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;今天学习了一些线性规划的有关知识，我发现在数据分析这个领域的某些概念并不和学科中的大概念相同，或者说，数据分析这个更注重实践的领域，其实了解这个东西是如何运作的就 OK 了。&lt;/li&gt;
&lt;li&gt;学习和实习要分开，也要联系起来，分开是指对于同一个内容的学习，可能实习的要求并不是很高，但是学习上会对我做要求，例如 python，在数据分析中我只需要能基本看懂代码就可以，因为最终的编写任务是交给 AI 完成的，但是在学校的考核中我还是要深入学习一下 python 的基本语法甚至进阶语法，因为考试的时候可没有 AI 帮我写代码；联系起来就是可以通过实习提升自己知识水平的广度，了解很多学校里学不到的东西，也可以通过学校的学习拓展实习所学的深度，例如未来我们应该会学习傅里叶变换，到时候学的就是公式和推导，应用，而不是简单的只有应用了。&lt;/li&gt;
&lt;li&gt;总体来说这一周有点摆烂。看公司里的活也挺多，晓蝶姐也挺忙的，就没好意思打扰&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;回来之后吃饭，刷了一会视频，从八点睡到了十一点。很奇怪。&lt;/li&gt;
&lt;li&gt;起床打了一把吃鸡，现在零点半，在写日记&lt;/li&gt;
&lt;li&gt;作息好像完全乱了。。这太扯了&lt;/li&gt;
&lt;li&gt;饿了。点了个塔斯汀，手残可乐撒了，不为打翻的可乐哭泣，高高兴兴吃掉剩下的。这可能就是成长吧&lt;/li&gt;
&lt;li&gt;有点撑得慌。&lt;/li&gt;
&lt;li&gt;明天就又可以回家了好开心，报名周六晚上打排球了，听说这次的人都挺厉害的&lt;/li&gt;
&lt;li&gt;破酒店凌晨一点十七莫名其妙断网了&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;记一下上周日回石家庄玩爸爸给的200块钱怎么花的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#记一下上周日回石家庄玩爸爸给的200块钱怎么花的&#34;&gt;#&lt;/a&gt; 记一下上周日回石家庄玩爸爸给的 200 块钱怎么花的&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;三小瓶君乐宝酸奶     10 元&lt;/li&gt;
&lt;li&gt;火车站寄存柜            16 元&lt;/li&gt;
&lt;li&gt;牛肉面                       15 元&lt;/li&gt;
&lt;li&gt;打车                           25 元&lt;/li&gt;
&lt;li&gt;买水果                       14 元&lt;/li&gt;
&lt;li&gt;吃饭                  12+22.9+10+21.9+12+10+10 元&lt;/li&gt;
&lt;li&gt;午饭                           12 元&lt;/li&gt;
&lt;li&gt;拓展坞                       34 元&lt;/li&gt;
&lt;li&gt;火车票                       69 元&lt;/li&gt;
&lt;li&gt;怎么成三百多了。。不管了&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏&#34;&gt;#&lt;/a&gt; 游戏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;和平精英挂机做任务（吃了一把）&lt;/li&gt;
&lt;li&gt;火影日常&lt;/li&gt;
&lt;li&gt;突然想起来 ios 区还有一个小号，登录领一下自选 A 忍&lt;/li&gt;
&lt;li&gt;三角洲好几天没玩了&lt;/li&gt;
&lt;li&gt;单机游戏好久没玩了。为什么当时那么想玩。买了又不玩&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-07-30T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</id>
        <title>线性规划速成</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
        <content type="html">&lt;h2 id=&#34;线性规划的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线性规划的定义&#34;&gt;#&lt;/a&gt; 线性规划的定义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一个优化问题，如果其所有表达式（条件，目标，约束）都是线性的，那么它就是线性规划。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;游戏每天提供 100 点体力，可通过通关 A、B、C 三张地图获取经验升级。&lt;/li&gt;
&lt;li&gt;通关奖励与消耗：
&lt;ul&gt;
&lt;li&gt;A 地图：20 点经验 / 次，消耗 4 点体力 / 次&lt;/li&gt;
&lt;li&gt;B 地图：30 点经验 / 次，消耗 8 点体力 / 次&lt;/li&gt;
&lt;li&gt;C 地图：45 点经验 / 次，消耗 15 点体力 / 次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;约束条件：A、B、C 三张地图每天通关总次数最多 20 次。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;解答&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解答&#34;&gt;#&lt;/a&gt; 解答：&lt;/h2&gt;
&lt;h3 id=&#34;我的思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我的思路&#34;&gt;#&lt;/a&gt; 我的思路&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;刷 A 图的体力转换经验是 1：5，B 图 1：3.75，C 图 1：3&lt;/li&gt;
&lt;li&gt;所以 A 图最值得刷&lt;/li&gt;
&lt;li&gt;但是如果全刷 A 图会浪费 20 体力&lt;/li&gt;
&lt;li&gt;只能去掉几张 A，用 B 来补&lt;/li&gt;
&lt;li&gt;少 1A 多 1B 的差价是 4 体力，正好可以整除 20&lt;/li&gt;
&lt;li&gt;最终确定 15 次 A 图，5 次 B 图&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;几何意义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#几何意义&#34;&gt;#&lt;/a&gt; 几何意义&lt;/h2&gt;
&lt;h3 id=&#34;可行域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可行域&#34;&gt;#&lt;/a&gt; 可行域&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;由于我们的约束条件都是线性的，我们可以在一个平面直角坐标系中画出所有的条件，最终围成的区域内一定有我们的解。&lt;/li&gt;
&lt;li&gt;可行域一定是一个凸多边形&lt;/li&gt;
&lt;li&gt;有关几何意义的内容，大致理解就可以，不要丝扣，我们还是应该致力于解决问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;决策变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#决策变量&#34;&gt;#&lt;/a&gt; 决策变量&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;问题中要确定的未知量&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;目标函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目标函数&#34;&gt;#&lt;/a&gt; 目标函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;即最终想求解最值的函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;约束条件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#约束条件&#34;&gt;#&lt;/a&gt; 约束条件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一般约束条件：各种实际条件限制，时间，资金等&lt;/li&gt;
&lt;li&gt;隐藏约束条件：函数、自变量的定义域限制、&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;解题思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解题思路&#34;&gt;#&lt;/a&gt; 解题思路&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;数学建模的过程，就是把题目翻译成数学语言的过程&lt;/li&gt;
&lt;li&gt;一组公式，加上对这组公式的含义的解释，就是一个数学模型&lt;/li&gt;
&lt;li&gt;模型求解可以用单纯形法&lt;/li&gt;
&lt;li&gt;建议用 python 或 matlab 求解&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;和多元函数求极值的关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#和多元函数求极值的关系&#34;&gt;#&lt;/a&gt; 和多元函数求极值的关系&lt;/h3&gt;
&lt;p&gt;拉格朗日数乘法（只能用于等式）&lt;/p&gt;
&lt;h3 id=&#34;套公式代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#套公式代码&#34;&gt;#&lt;/a&gt; 套公式（代码）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;让 kimi 写了个求解线性规划的代码，以后只需要把数据整理好写到三个表中就可以了，整理数据的活也可以给 AI。&lt;/li&gt;
&lt;li&gt;有一个小技巧，改表格的时候，把 csv 改成 txt，直接粘贴 AI 给的表格的文本文档形式，然后保存之后再改回 csv，非常的方便。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="数学" scheme="https://tartar0us.github.io/categories/%E6%95%B0%E5%AD%A6/" />
        <category term="数据分析" scheme="https://tartar0us.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <category term="数学" scheme="https://tartar0us.github.io/tags/%E6%95%B0%E5%AD%A6/" />
        <updated>2025-07-30T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/%E8%BD%B4%E6%89%BF%E6%95%85%E9%9A%9C%E7%9A%84%E6%8C%AF%E5%8A%A8%E5%88%86%E6%9E%90/</id>
        <title>轴承故障的振动分析学习总结</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E8%BD%B4%E6%89%BF%E6%95%85%E9%9A%9C%E7%9A%84%E6%8C%AF%E5%8A%A8%E5%88%86%E6%9E%90/"/>
        <content type="html">&lt;h2 id=&#34;stft短时傅里叶变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stft短时傅里叶变换&#34;&gt;#&lt;/a&gt; STFT：短时傅里叶变换&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;傅里叶变换&lt;/strong&gt;的意义：把一个&lt;strong&gt;随时间变化的信号（时域信号）&lt;/strong&gt;，转换成一个&lt;strong&gt;由频率组成的信号（频域信号 ****）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是傅里叶变换只能知道这个信号里有哪些频率，并不知道这些频率什么时候出现，短时傅里叶变换可以知道在一个较短的时间段内存在哪些频率，由此知道在时间顺序上，哪一段有哪个频率的信号，&lt;/p&gt;
&lt;p&gt;比喻理解：&lt;/p&gt;
&lt;p&gt;比如一首歌：前 5 秒是低音节奏接下来的 5 秒是高音独奏，你如果只做傅里叶变换，你只会知道「有低音也有高音」，却不知道「低音在前，高音在后」。这就好像：你只知道一道菜用了哪些调料，但不知道它们是什么时候加进去的。&lt;/p&gt;
&lt;p&gt;理解：&lt;strong&gt;短时傅里叶变换&lt;/strong&gt;弥补了&lt;strong&gt;傅里叶变换&lt;/strong&gt;没有&lt;strong&gt;时间内定位能力&lt;/strong&gt;的缺点，在实际应用中更加实用&lt;/p&gt;
&lt;h2 id=&#34;fft快速傅里叶变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fft快速傅里叶变换&#34;&gt;#&lt;/a&gt; FFT：快速傅里叶变换：&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;普通 DFT&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;FFT&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;对每个频率都从头算一遍&lt;/td&gt;
&lt;td&gt;把计算结果递归拆分，再合并&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;需要 N2N^2 次运算&lt;/td&gt;
&lt;td&gt;只需 Nlog⁡NN \log N 次运算&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;没有复用计算结果&lt;/td&gt;
&lt;td&gt;大量复用共用部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;快速傅里叶变换是一种算法， 用来计算傅里叶变换&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;比喻这一块：&lt;/em&gt;&lt;/p&gt;
&lt;h5 id=&#34;傅里叶变换一把频率分析的大枪可以扫清楚所有频率成分但是看不清时间变化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#傅里叶变换一把频率分析的大枪可以扫清楚所有频率成分但是看不清时间变化&#34;&gt;#&lt;/a&gt; &lt;strong&gt;傅里叶变换&lt;/strong&gt;：一把 “频率分析的大枪”—— 可以扫清楚所有频率成分，但是&lt;strong&gt;看不清时间变化&lt;/strong&gt;。&lt;/h5&gt;
&lt;h5 id=&#34;短时傅里叶变换stft在这把枪上加了个瞄准镜你可以锁定一小段时间分析频率这样你能看清在什么时候出现了什么声音&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#短时傅里叶变换stft在这把枪上加了个瞄准镜你可以锁定一小段时间分析频率这样你能看清在什么时候出现了什么声音&#34;&gt;#&lt;/a&gt; &lt;strong&gt;短时傅里叶变换（STFT）&lt;/strong&gt;：在这把枪上加了个 “瞄准镜”，你可以&lt;strong&gt;锁定一小段时间分析频率&lt;/strong&gt;，这样你能看清 “在什么时候出现了什么声音”。&lt;/h5&gt;
&lt;h5 id=&#34;快速傅里叶变换fft对傅里叶变换的加速器-改良配件让它跑得飞快&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速傅里叶变换fft对傅里叶变换的加速器-改良配件让它跑得飞快&#34;&gt;#&lt;/a&gt; &lt;strong&gt;快速傅里叶变换（FFT）&lt;/strong&gt;：对傅里叶变换的&lt;strong&gt;加速器 / 改良配件&lt;/strong&gt;，让它跑得飞快！&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NzEyMDYyMTI=&#34;&gt;https://zhuanlan.zhihu.com/p/671206212&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;凯斯西储大学  轴承数据分析&lt;/p&gt;
&lt;h2 id=&#34;wavelet-transform小波变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wavelet-transform小波变换&#34;&gt;#&lt;/a&gt; Wavelet Transform 小波变换：&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;比较项&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;傅里叶变换（FT）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;小波变换（WT）&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分析方式&lt;/td&gt;
&lt;td&gt;整体频率&lt;/td&gt;
&lt;td&gt;局部时频（哪时什么频率）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;适合信号类型&lt;/td&gt;
&lt;td&gt;平稳信号（频率不变）&lt;/td&gt;
&lt;td&gt;非平稳信号（频率变化）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分辨率&lt;/td&gt;
&lt;td&gt;时间差，频率好&lt;/td&gt;
&lt;td&gt;时间和频率都能调节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;———————————————— 公式 ————————————————&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 傅里叶变换：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;![](file:///C:\Users\HUASHUO\AppData\Local\Temp\ksohtml18288\wps1.jpg)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 短时傅里叶变换&lt;/strong&gt; **：**&lt;/p&gt;
&lt;p&gt;![](file:///C:\Users\HUASHUO\AppData\Local\Temp\ksohtml18288\wps2.jpg)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;快速傅里叶变换（这是对傅里叶变换的改进）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;![](file:///C:\Users\HUASHUO\AppData\Local\Temp\ksohtml18288\wps3.jpg)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 小波变换&lt;/strong&gt; **：**&lt;/p&gt;
&lt;p&gt;![](file:///C:\Users\HUASHUO\AppData\Local\Temp\ksohtml18288\wps4.jpg)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 连续小波变换&lt;/strong&gt; **：**&lt;/p&gt;
&lt;p&gt;![](file:///C:\Users\HUASHUO\AppData\Local\Temp\ksohtml18288\wps5.jpg)&lt;/p&gt;
&lt;p&gt;以上几种都是时频二维分析的方法&lt;/p&gt;
&lt;h4 id=&#34;要掌握凯斯西储大学cwru轴承数据的解读与分类处理您需要学会以下知识点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#要掌握凯斯西储大学cwru轴承数据的解读与分类处理您需要学会以下知识点&#34;&gt;#&lt;/a&gt; 要掌握凯斯西储大学（CWRU）轴承数据的解读与分类处理，您需要学会以下知识点：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数据集理解：了解 CWRU 轴承数据集的来源、结构和特点。该数据集包含了不同类型的轴承故障数据，如内圈故障、外圈故障和滚动体故障，以及正常工况下的轴承数据。数据采集过程中，通过在轴承的驱动端和风扇端安装加速度计来记录轴承的振动信号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据预处理：学习如何对振动信号数据进行预处理，包括去除噪声、归一化和特征提取。常用的预处理方法包括去除噪声、归一化和特征提取。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特征提取：掌握从时域和频域提取特征的方法，例如均值、方差、峭度、频谱等。同时，了解时频域特征提取方法，如短时傅里叶变换、连续小波变换、希尔伯特 - 黄变换等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分类方法：学习如何使用机器学习算法对轴承数据进行分类。这可能包括传统的机器学习算法，如支持向量机（SVM）、决策树、随机森林等，以及深度学习方法，如卷积神经网络（CNN）和循环神经网络（RNN）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模型评估：了解如何评估分类模型的性能，包括准确率、召回率、F1 分数等指标。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据可视化：学习如何使用可视化工具，如 Matplotlib、Seaborn 或 FineBI，进行数据可视化，以帮助理解数据分布和特征。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 编程：掌握 Python 编程语言，特别是使用 NumPy、Pandas、SciPy、Matplotlib 等库进行数据处理和分析。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信号处理知识：了解基本的信号处理概念，如傅里叶变换、小波变换等，这些对于理解和处理振动信号数据非常重要。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过学习这些知识点，您将能够更好地理解和处理 CWRU 轴承数据集，进行有效的故障诊断和分类。&lt;/p&gt;
&lt;h2 id=&#34;svm-支持向量机用一个超平面把数据分成两类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#svm-支持向量机用一个超平面把数据分成两类&#34;&gt;#&lt;/a&gt; &lt;strong&gt;svm&lt;/strong&gt; &lt;em&gt;支持向量机&lt;/em&gt;，用一个超平面把数据分成两类。&lt;/h2&gt;
&lt;p&gt;如果二维不好分开，可以加上一个非线性的特征，比如在 xoy 二维直角坐标系上不好分开，加入一个新的坐标轴，是 x 方 + y 方轴，&lt;/p&gt;
&lt;p&gt;在低纬度下对数据进行升维&lt;/p&gt;
&lt;p&gt;或者使用核技巧（目前没弄懂）&lt;/p&gt;
&lt;p&gt;更高阶的：随机森林&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bagging&lt;/strong&gt;：模型之间相互独立，共同投票选出最终结果&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boosting&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;通过迭代地训练一系列弱学习器，每个新的学习器都试图纠正前一个学习器的错误。所有学习器的预测结果会被加权汇总，以得到最终预测。AdaBoost、Gradient Boosting 和 XGBoost 是 Boosting 的常见算法。&lt;/p&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="实习" scheme="https://tartar0us.github.io/tags/%E5%AE%9E%E4%B9%A0/" />
        <category term="数据分析" scheme="https://tartar0us.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2025-07-30T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/7%E6%9C%8829%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>7月29日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/7%E6%9C%8829%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h1 id=&#34;博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#博客&#34;&gt;#&lt;/a&gt; 博客&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;大概就是博客的搭建越来越完善，非常开心，看着博客里的文章一点点变多，非常有成就感。明天要把 csdn 中的所有日记都导出 md 挂到我的网站上，那个时候网页的内容就丰富多了。&lt;/li&gt;
&lt;li&gt;学了一点点 md 语法，我认为写博客是完全够用了。&lt;/li&gt;
&lt;li&gt;现在存在的问题就是前端的东西看不太懂，对 UI 的美化还是有些依赖 AI，缺点很明显，很容易像上次一样被 ai 直接全搞砸了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;实习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实习&#34;&gt;#&lt;/a&gt; 实习&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;学了 python 的部分基本语法，明天争取上午快速过完，然后再看看 excel，不能太墨迹，要不然一个暑假很快过去了什么也学不到。&lt;/li&gt;
&lt;li&gt;感觉贾总的公司的人们业务能力都不是很强，我在的这段时间好像闯祸两次了，就是遇到问题就停滞，甚至不跟上级汇报。很呆呆的感觉，可能程序员都这样吧。&lt;/li&gt;
&lt;li&gt;收藏了 b 站一个数据分析师的系列视频，以后可以跟着他学，多了解数据分析师需要学哪些东西，找对方向。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;回酒店之后洗了衣服，有进步。&lt;/li&gt;
&lt;li&gt;晚饭吃的塔斯汀，虽然不是很健康但是爽了。&lt;/li&gt;
&lt;li&gt;睡得又有点晚了。无可厚非，今天基本没有在浪费时间。&lt;/li&gt;
&lt;li&gt;但是好多天没读书了。&lt;/li&gt;
&lt;li&gt;代办有一些还没做，明天得着手弄了&lt;/li&gt;
&lt;li&gt;以后坚决不能这样，实习每天只睡四五个小时太折磨人了，（但是今天好像是最近一周之内睡得最早的一次）以后坚决不能这么熬夜了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏&#34;&gt;#&lt;/a&gt; 游戏&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;火影日常 + 上忍二&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;^+&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.771331em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.771331em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-07-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/7%E6%9C%8830%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>7月30日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/7%E6%9C%8830%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;h1 id=&#34;博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#博客&#34;&gt;#&lt;/a&gt; 博客&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;太懒了，博客的迁移大业目前还没有进行&lt;/li&gt;
&lt;li&gt;遇到的问题是代码不能在预览的网页上显示。可能是主题作者用了自定义的代码高亮配置，但是这个我又不会捣鼓。目前暂时想到的解决方案是上网（贴吧）求助大佬。&lt;/li&gt;
&lt;li&gt;哦忘说了，30 号这天晚上折腾了大概半个小时左右的平板，想用 termux 搭一个 linux 的虚拟机，跟着 b 站教程来，最后一步进不去了。再者看到耗电量变大挺快，然后应用的场景少之又少，就暂时放弃了。准备今天晚上下载一个 obsidian 在平板上，这样也可以写 markdown 文件了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习&#34;&gt;#&lt;/a&gt; 学习&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;python 基本语法强化，把学过的内容写成 md 文件存了下来&lt;/li&gt;
&lt;li&gt;（其实这一天全摸鱼写博客了，又因为连续熬夜睡太晚没状态，听课的时候迷迷糊糊的）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;生活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生活&#34;&gt;#&lt;/a&gt; 生活&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;两点睡的。越来越狠了熬夜&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏&#34;&gt;#&lt;/a&gt; 游戏&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;六连胜上暗部。&lt;/li&gt;
&lt;li&gt;看到 xwx 上超影了，说实话有点羡慕&lt;/li&gt;
&lt;li&gt;我什么时候能上影啊。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h3&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-07-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/python%20demo/</id>
        <title>python demo1</title>
        <link rel="alternate" href="https://tartar0us.github.io/python%20demo/"/>
        <content type="html">&lt;p&gt;&amp;lt;!–code￼0–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;写函数的时候用print输出好还是用return输出好&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写函数的时候用print输出好还是用return输出好&#34;&gt;#&lt;/a&gt; 写函数的时候用 print 输出好还是用 return 输出好？&lt;/h3&gt;
&lt;h5 id=&#34;一-用return-的优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-用return-的优势&#34;&gt;#&lt;/a&gt; 一、用 return 的优势&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单一职责原则&lt;/strong&gt;&lt;br /&gt;
函数的核心职责是 “计算数据”（实现加法逻辑），而 “输出结果” 属于展示层面的行为。第一种方式中， &lt;code&gt;plus&lt;/code&gt;  函数专注于计算  &lt;code&gt;a + b&lt;/code&gt;  的结果并通过  &lt;code&gt;return&lt;/code&gt;  返回，把 “计算” 和 “输出” 的职责分开，符合编程里的&lt;strong&gt;单一职责原则&lt;/strong&gt;，函数功能更纯粹、清晰。&lt;br /&gt;
比如，后续如果不想打印结果，而是要把这个和用于其他计算（如参与更复杂的公式、存入列表等），直接使用  &lt;code&gt;return&lt;/code&gt;  的结果即可，灵活性更高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;结果可复用&lt;/strong&gt;&lt;br /&gt;
 &lt;code&gt;return&lt;/code&gt;  返回的是一个明确的值，这个值可以被调用处灵活处理：既可以用  &lt;code&gt;print&lt;/code&gt;  输出，也能赋值给变量参与其他逻辑。例如：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;python&lt;/p&gt;
&lt;p&gt;运行&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼1–&amp;gt;&lt;/p&gt;
&lt;p&gt;如果是第二种方式（函数内部直接  &lt;code&gt;print&lt;/code&gt;  ），就无法直接获取计算结果做后续处理，函数的复用性大打折扣。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;符合函数设计理念&lt;/strong&gt;&lt;br /&gt;
函数的本质是 “输入一些数据，经过处理后输出（返回）另一些数据”， &lt;code&gt;return&lt;/code&gt;  是实现这一流程的标准方式。它清晰地界定了函数的输入输出，让代码逻辑更易理解、维护，其他人阅读代码时，能快速知道函数会产出什么结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;作用域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#作用域&#34;&gt;#&lt;/a&gt; 作用域&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;函数中如果定义了变量，那么这个变量就只能在函数内使用，是一个局部变量，如果在函数外使用会报错&lt;/li&gt;
&lt;li&gt;如果局部变量与全局变量同名，在函数中优先调用局部变量，除非声明 global XXXX&lt;/li&gt;
&lt;li&gt;for 循环里的变量可以在循环外使用，虽然可以但是不建议，这不标准&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;for循环体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#for循环体&#34;&gt;#&lt;/a&gt; for 循环体&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;python 中的 for 循环和 c 语言中的 for 循环有较大差别，c 语言中 for 后面的括号跟着执行条件，在执行循环之前先判断条件。而 python 中的 for 指令默认遍历，如果想要加条件需要在循环体中加。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="Python" scheme="https://tartar0us.github.io/tags/Python/" />
        <updated>2025-07-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</id>
        <title>markdown语法学习</title>
        <link rel="alternate" href="https://tartar0us.github.io/markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;h1 id=&#34;md基本语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#md基本语法&#34;&gt;#&lt;/a&gt; md 基本语法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;井号来设置标题，例如一个 #加空格就是一级标题&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;我是一级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是一级标题&#34;&gt;#&lt;/a&gt; 我是一级标题&lt;/h1&gt;
&lt;h2 id=&#34;我是二级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是二级标题&#34;&gt;#&lt;/a&gt; 我是二级标题&lt;/h2&gt;
&lt;h3 id=&#34;我是三级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是三级标题&#34;&gt;#&lt;/a&gt; 我是三级标题&lt;/h3&gt;
&lt;h4 id=&#34;我是四级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是四级标题&#34;&gt;#&lt;/a&gt; 我是四级标题&lt;/h4&gt;
&lt;h5 id=&#34;我是五级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是五级标题&#34;&gt;#&lt;/a&gt; 我是五级标题&lt;/h5&gt;
&lt;h6 id=&#34;我是六级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是六级标题&#34;&gt;#&lt;/a&gt; 我是六级标题&lt;/h6&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 obsidian 中暂时不用担心文章 title 和日期之类的，因为有快捷按键可以设置&lt;/li&gt;
&lt;li&gt;好像我目前除了会写个标题和正文之外不会别的了（）&lt;/li&gt;
&lt;li&gt;两个 *（星号）之间的字体是斜体，例如：&lt;em&gt;你好&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;两个～（波浪线）之间的字是一段被删除线标记的文本 例如：&lt;s&gt;hell0&lt;/s&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下面是ai生成的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下面是ai生成的&#34;&gt;#&lt;/a&gt; 下面是 AI 生成的&lt;/h1&gt;
&lt;h3 id=&#34;三-文本样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-文本样式&#34;&gt;#&lt;/a&gt; 三、文本样式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;粗体&lt;/strong&gt;：用两个星号 &lt;code&gt;**&lt;/code&gt;  或两个下划线 &lt;code&gt;__&lt;/code&gt; 包围文字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼0–&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;：用一个星号 &lt;code&gt;*&lt;/code&gt;  或一个下划线 &lt;code&gt;_&lt;/code&gt; 包围文字。&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼1–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;s&gt;删除线&lt;/s&gt;：用两个波浪号 &lt;code&gt;~~&lt;/code&gt;  包围文字。&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼2–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;四-列表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-列表&#34;&gt;#&lt;/a&gt; 四、列表&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无序列表&lt;/strong&gt;：使用 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt;  或 &lt;code&gt;*&lt;/code&gt;  作为列表标记。&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼3–&amp;gt;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼4–&amp;gt;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼5–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;有序列表&lt;/strong&gt;：使用数字加点作为列表标记。&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼6–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;五-链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-链接&#34;&gt;#&lt;/a&gt; 五、链接&lt;/h3&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼7–&amp;gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼8–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;六-图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-图片&#34;&gt;#&lt;/a&gt; 六、图片&lt;/h3&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼9–&amp;gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼10–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;七-引用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七-引用&#34;&gt;#&lt;/a&gt; 七、引用&lt;/h3&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼11–&amp;gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼12–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;八-代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#八-代码&#34;&gt;#&lt;/a&gt; 八、代码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;行内代码&lt;/strong&gt;：用反引号 &lt;code&gt;`&lt;/code&gt;  包围代码。&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼13–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;代码块&lt;/strong&gt;：用三个反引号 &lt;code&gt;```&lt;/code&gt;  包围代码块。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;反引号是键盘上的波浪线！！！&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼14–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;九-表格&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#九-表格&#34;&gt;#&lt;/a&gt; 九、表格&lt;/h3&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼15–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;十-分隔线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十-分隔线&#34;&gt;#&lt;/a&gt; 十、分隔线&lt;/h3&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼16–&amp;gt;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼17–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;十一-脚注1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十一-脚注1&#34;&gt;#&lt;/a&gt; 十一、脚注 [^1]&lt;/h3&gt;
&lt;p&gt;在需要添加脚注的地方插入 &lt;code&gt;[^1]&lt;/code&gt; ，然后在文档末尾添加脚注内容。&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼18–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;十二-html标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十二-html标签&#34;&gt;#&lt;/a&gt; 十二、HTML 标签&lt;/h3&gt;
&lt;p&gt;Markdown 支持在文档中直接插入 HTML 标签，例如：&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;p&gt;复制&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼19–&amp;gt;&lt;/p&gt;
&lt;p&gt;好吧我说实话，ai 生成的还是不能直接复制粘贴，网站上还是不能正确显示。等需要的时候来 md 里边看吧，等哪天看不下去了再改一下格式整理一下&lt;/p&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <category term="md" scheme="https://tartar0us.github.io/tags/md/" />
        <updated>2025-07-29T15:31:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</id>
        <title>数据分析</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;这是一段引用文字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;数据分析学习路径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据分析学习路径&#34;&gt;#&lt;/a&gt; 数据分析学习路径&lt;/h2&gt;
&lt;h3 id=&#34;需要掌握的知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需要掌握的知识&#34;&gt;#&lt;/a&gt; 需要掌握的知识&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;理论知识&lt;/li&gt;
&lt;li&gt;业务知识（实践中学习）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;学习的五个层次&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习的五个层次&#34;&gt;#&lt;/a&gt; 学习的五个层次&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/pic.png&#34; alt=&#34;我的背景图&#34; /&gt;&lt;/p&gt;
&lt;p&gt;晓蝶姐说 :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;现在都是 ai 写代码了，我建议你学 python 语法的话能先看懂他写的就行，不用特别细致，找个项目快速过一遍整个流程，后边再具体的去学语法或者流程中的某个具体知识&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数据分析师的python要求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据分析师的python要求&#34;&gt;#&lt;/a&gt; 数据分析师的 python 要求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1. 掌握 python 基本语法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2. 会基本使用 pandas&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据分析师的excel要求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据分析师的excel要求&#34;&gt;#&lt;/a&gt; 数据分析师的 excel 要求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;详情见这个视频&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW5xNHkxZDdyZz9zcG1faWRfZnJvbT0zMzMuNzg4LnZpZGVvcG9kLnNlY3Rpb25zJmFtcDt2ZF9zb3VyY2U9NTAyZWNhYjJmOGJlYzgwMGVjZDk0MTVmNzJmOGE5YTY=&#34;&gt;https://www.bilibili.com/video/BV1nq4y1d7rg?spm_id_from=333.788.videopod.sections&amp;amp;vd_source=502ecab2f8bec800ecd9415f72f8a9a6&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;透视表&lt;/li&gt;
&lt;li&gt;记忆一些常用且有用的快捷键&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据分析师的sql要求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据分析师的sql要求&#34;&gt;#&lt;/a&gt; 数据分析师的 sql 要求&lt;/h3&gt;
&lt;h4 id=&#34;不需要掌握的点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不需要掌握的点&#34;&gt;#&lt;/a&gt; 不需要掌握的点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;数据写入&lt;/li&gt;
&lt;li&gt;数据修改&lt;/li&gt;
&lt;li&gt;数据删除&lt;/li&gt;
&lt;li&gt;游标&lt;/li&gt;
&lt;li&gt;触发器&lt;/li&gt;
&lt;li&gt;存储过程&lt;/li&gt;
&lt;li&gt;安全管理&lt;/li&gt;
&lt;li&gt;角色管理&lt;/li&gt;
&lt;li&gt;事务控制&lt;/li&gt;
&lt;li&gt;查询速度优化&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;需要掌握的基础部分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需要掌握的基础部分&#34;&gt;#&lt;/a&gt; 需要掌握的基础部分&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;select 数据提取&lt;/li&gt;
&lt;li&gt;where 语句使用&lt;/li&gt;
&lt;li&gt;表的内联外联&lt;/li&gt;
&lt;li&gt;排序和去重&lt;/li&gt;
&lt;li&gt;SQL 的书写规则&lt;/li&gt;
&lt;li&gt;分组 子查询&lt;/li&gt;
&lt;li&gt;聚合函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;需要掌握的进阶部分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需要掌握的进阶部分&#34;&gt;#&lt;/a&gt; 需要掌握的进阶部分&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;case when 的用法&lt;/li&gt;
&lt;li&gt;窗口函数如何使用&lt;/li&gt;
&lt;li&gt;sql 的执行顺序&lt;/li&gt;
&lt;li&gt;变量的使用&lt;/li&gt;
&lt;li&gt;分组查询严格模式&lt;/li&gt;
&lt;li&gt;空值的影响处理&lt;/li&gt;
&lt;li&gt;count (*) 和 count（列）&lt;/li&gt;
&lt;li&gt;exist&lt;/li&gt;
&lt;li&gt;临时表&lt;/li&gt;
&lt;li&gt;自联接&lt;/li&gt;
&lt;li&gt;文本时间函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sql三个重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql三个重点&#34;&gt;#&lt;/a&gt; sql 三个重点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;沟通好，明确需求，避免返工&lt;/li&gt;
&lt;li&gt;写好的 sql 语句需要备份&lt;/li&gt;
&lt;li&gt;sql 是一种语言，mysql 和 livesql 是工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据分析的主要流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据分析的主要流程&#34;&gt;#&lt;/a&gt; 数据分析的主要流程&lt;/h2&gt;
&lt;h3 id=&#34;一-数据预处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-数据预处理&#34;&gt;#&lt;/a&gt; 一、数据预处理&lt;/h3&gt;
&lt;p&gt;1. 对脏数据、空缺数据进行处理，填充或删除（只针对时序数据中的缺失）&lt;/p&gt;
&lt;h3 id=&#34;二-数据分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-数据分类&#34;&gt;#&lt;/a&gt; 二、数据分类&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;分成两个集，训练集和测试集，一般比例为 8：2，随机分配&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-模型建立还有可能不是模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-模型建立还有可能不是模型&#34;&gt;#&lt;/a&gt; 三、模型建立（还有可能不是模型）&lt;/h3&gt;
&lt;p&gt;模型是通过经验，让机器吃这些数据，然后预测未来的情况，而另一种办法是直接同数据中计算出公式，未来的预测直接用公式计算解决（这种方法称为机理）&lt;/p&gt;
&lt;p&gt;1. 运用各种模型，随机森林，xgboost&lt;/p&gt;
&lt;h3 id=&#34;四-结果分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-结果分析&#34;&gt;#&lt;/a&gt; 四、结果分析&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;精确率，召回率等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实用的数据库工具：Navicat Premium&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;五-可能存在的盲点或信息差&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-可能存在的盲点或信息差&#34;&gt;#&lt;/a&gt; 五、可能存在的盲点或信息差&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;，其语言是 sql，做数据分析最重要的是模型建立的部分，sql 只是一个在数据库中读取数据的工具&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="实习" scheme="https://tartar0us.github.io/tags/%E5%AE%9E%E4%B9%A0/" />
        <category term="md" scheme="https://tartar0us.github.io/tags/md/" />
        <category term="Python" scheme="https://tartar0us.github.io/tags/Python/" />
        <category term="SQL" scheme="https://tartar0us.github.io/tags/SQL/" />
        <category term="数据分析" scheme="https://tartar0us.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2025-07-28T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</id>
        <title>我的第二篇Hexo博客</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
        <content type="html">&lt;p&gt;第二篇 blog&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;blog 更新指令&lt;/li&gt;
&lt;li&gt;hexo clean 清理当前缓存的静态页面&lt;/li&gt;
&lt;li&gt;hexo generate 生成新的静态页面&lt;/li&gt;
&lt;li&gt;hexo deploy 将生成的静态页面挂到 github 之类的网站进行代理&lt;/li&gt;
&lt;li&gt;hexo server 启动本地服务器，预览静态页面&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <category term="Hexo" scheme="https://tartar0us.github.io/tags/Hexo/" />
        <updated>2025-07-27T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://tartar0us.github.io/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼0–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼1–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼2–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼3–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <updated>2025-07-26T02:51:28.060Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%AE%8C%E5%96%84/</id>
        <title>博客的完善</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%AE%8C%E5%96%84/"/>
        <content type="html">&lt;h1 id=&#34;博客的完善&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#博客的完善&#34;&gt;#&lt;/a&gt; 博客的完善&lt;/h1&gt;
&lt;h2 id=&#34;markdown-文本编辑器的选择&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#markdown-文本编辑器的选择&#34;&gt;#&lt;/a&gt; markdown 文本编辑器的选择&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;通过 b 站查询了解到 typora 后期是要收费的，就没有用，看 b 站有关 obsidian 的教程感觉好复杂， 但是真正下载下来之后发现，既然我只用它的文本编辑功能，那暂时也不需要掌握其他的用法。&lt;/li&gt;
&lt;li&gt;obsidian 的优点非常明显，就是可以直接在编辑文本的时候预览到最终的效果，比如三个井号 ### 是三级标题，在新的一行输入之后直接就变了，下面展示一级标题二级标题三级标题&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;我是一级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是一级标题&#34;&gt;#&lt;/a&gt; 我是一级标题&lt;/h1&gt;
&lt;h2 id=&#34;我是二级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是二级标题&#34;&gt;#&lt;/a&gt; 我是二级标题&lt;/h2&gt;
&lt;h3 id=&#34;我是三级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我是三级标题&#34;&gt;#&lt;/a&gt; 我是三级标题&lt;/h3&gt;
&lt;p&gt;非常的直观方便！&lt;/p&gt;
&lt;h2 id=&#34;更新的方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更新的方式&#34;&gt;#&lt;/a&gt; 更新的方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;现在已经完全熟悉 hexo 更新指令了，但在更新的过程中给可以选择两种方式，一种是在 blog 文件夹中右键运行 git bush，第二种是借助编译器里的终端，比如 kiro 里的，后者的优点是比前者快一些，有问题还可以随时问 ai，我比较满意。但是如果是在另一个电脑中，没有办法的情况下，第一种情况也行&lt;br /&gt;
 —————————————————— 二编，7 月 29 日 23：46——————————-————&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;随机图片生成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#随机图片生成&#34;&gt;#&lt;/a&gt; 随机图片生成&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;作者的这个 api 地址是不能用的，我现在 github 应该只能免费生成一个网页，现在我的博客文章没有封面是一个比较棘手的事。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;写日记&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写日记&#34;&gt;#&lt;/a&gt; 写日记&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;我纠结的第二个问题就是要不要在部署在 github 上的博客写日记。我之前的日记是在 csdn 写的，因为那个平台被熟人发现的概率非常非常低，并且主要是更新自己的一些日常，算是把自己的想法完全裸露在世界面前。&lt;/li&gt;
&lt;li&gt;我的一直的愿望就是能有一个地方，永久的储存我的思考，记录，我希望十年或者二十年之后看起来会特别感动，至少我把当年的事都记下来了。当然就算一开始是一些不好的情绪多一些，慢慢我也会记录生活中的快乐。这绝对是一个很宏大的计划。&lt;/li&gt;
&lt;li&gt;我决定还是要在我的网站上写日记，因为其他大佬也有在自己的网站上记录生活，分类中，学习，生活，技术分明，还有游戏。我觉得这真的是一件很酷的事情。还有就是我的网站被熟人发现的概率基本为零。江沛那样的大佬的 github 就只有两三个粉丝甚至更少，我这样的第一没人关注我，第二也不会看我的博客，嘿嘿。我去看看 csdn 能不能直接保存为 md，这样就省了很多力气了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;csdn文章迁移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csdn文章迁移&#34;&gt;#&lt;/a&gt; csdn 文章迁移&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;刚才找到了一个办法，需要下载一个 python 程序，相当于是把 csdn 中的所有文章爬下来，44mb 但是酒店的网实在是太差了，只能明天去公司下载了。今天又不小心熬夜了（并非不小心）晚安。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="技术" scheme="https://tartar0us.github.io/categories/%E6%8A%80%E6%9C%AF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <category term="Hexo" scheme="https://tartar0us.github.io/tags/Hexo/" />
        <updated>2025-07-25T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
        <title>我的第一篇Hexo博客</title>
        <link rel="alternate" href="https://tartar0us.github.io/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
        <content type="html">&lt;h1 id=&#34;欢迎来到我的博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#欢迎来到我的博客&#34;&gt;#&lt;/a&gt; 欢迎来到我的博客&lt;/h1&gt;
&lt;h2 id=&#34;1这个博客的由来&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1这个博客的由来&#34;&gt;#&lt;/a&gt; 1. 这个博客的由来&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;我在完全不懂前端知识的情况下，让 trae 帮我写了一个 blog 网站，并成功地部署到了 github 上。整个过程用了大概一天&lt;/li&gt;
&lt;li&gt;但是很不幸的是我后来在对 blog 的 UI 的美化过程中，trae 的代码编写出现了一些失误，以至于 blog 的 ui 基本上掉了。经过一个小时的调试后我决定放弃让 trae 用 hexo 架构帮我编写博客。&lt;/li&gt;
&lt;li&gt;在 b 站搜索后我决定使用 hexo 网站上的主题对自己的 blog 进行美化，并且删除除了文章和图片之外的所有内容，毕竟现在的 blog 也是一坨，到此结束也没有什么不好的。&lt;/li&gt;
&lt;li&gt;今天是 7 月 25 日，是我第二次对个人网站搭建的尝试，我将继续对前端进行探索，争取简单了解 js，html 语言，最终问了自己 blog 的个性化而努力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-我的学习清单&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-我的学习清单&#34;&gt;#&lt;/a&gt; 2. 我的学习清单&lt;/h2&gt;
&lt;p&gt;sql、python、线性规划、同时继续加深对随机森林，决策树，svm，xgboost，GBDT 等模型的理解，并尝试学习 html，js，md 等前端语言。听起来是一个很宏大的东西，可能在整个调试的过程中很吃力，最后的成果并不完美，但是我相信这绝对会是具有里程碑意义的一步。&lt;/p&gt;
&lt;h2 id=&#34;3-代码示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-代码示例&#34;&gt;#&lt;/a&gt; 3. 代码示例&lt;/h2&gt;
&lt;p&gt;&amp;lt;!–code￼0–&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;4-图片展示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-图片展示&#34;&gt;#&lt;/a&gt; 4. 图片展示&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/universe.png&#34; alt=&#34;我的背景图&#34; /&gt;&lt;br /&gt;
上面这张图片是让 AI 生成的&lt;br /&gt;
&lt;img data-src=&#34;/images/profile%20picture.jpg&#34; alt=&#34;我的背景图&#34; /&gt;&lt;br /&gt;
这张图片是《挪威的森林》里的小林绿子&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：完成编辑后，运行  &lt;code&gt;hexo clean &amp;amp;&amp;amp; hexo server&lt;/code&gt;  预览效果&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <category term="Hexo" scheme="https://tartar0us.github.io/tags/Hexo/" />
        <updated>2025-07-25T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/7%E6%9C%8822%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>7月22日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/7%E6%9C%8822%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;p&gt;今天是实习第一天，我只能说酒店很完美，能洗衣服能晾衣服，洗澡，有空调，有热水，有电绝对是很值得。&lt;/p&gt;
&lt;p&gt;早上八点多到了公司之后贾总让我先跟着张总学习一下使用 trae，他们公司本来是用的 cursor，但是好像后来觉得不如 trae 好用，就改用 trae 了。然后今天晓蝶姐给我推荐了用 kiro 也挺好用的，基本上跟 trae 差不多，我用 trae 的最大的感想就是比之前我用过所有的网页版交互人工智能都要先进，我说我的需求，他就可以完成一个程序开发的整个流程。我今天又顺带着上了一下我的 github，搭建了两个仓库，一个仓库中存的代码是让 trae 帮我生成的贪吃蛇网页版小游戏的代码，另一个是生成了一个待办清单的网页版，我后期想把它开发成一个 android app，估计明天就能弄出来，非常的有意思，这样我就相当于有了自己开发的第一个 app，我甚至可以把这个用来弄我们三下乡团队的老年人手机教学，和反诈骗、心理健康知识科普 app。这个 ai 真的是非常的好用。&lt;/p&gt;
&lt;p&gt;在看这个 trae 的教学视频的时候，博主的一段话点醒了我，他说这个 ai 开发环境的主要目的是帮助有技术的人更高效的开发工具，没有技术的人用起来会比较吃力，因为有技术的人在程序卡住的时候可以知道问题出在哪，解决问题推进程序继续完善，而没有技术的人只会说自己的需求，没法帮助 ai 解决问题，如果 ai 卡住了他们也就卡住了。所以说熟练的掌握 ai 工具确实是一个必不可少的技能，但是自身的专业素养，编码能力也是很重要的。&lt;/p&gt;
&lt;p&gt;午饭在酒店吃的，有点辣。 明天中午一到十二点就跑，争取吃上西红柿鸡蛋打卤面。&lt;/p&gt;
&lt;p&gt;晚饭在回来的路上找了一家面馆，吃的宽面，但是豆芽不是很好吃，好在有一瓶冰镇啤酒，非常的爽。&lt;/p&gt;
&lt;p&gt;今天在公司借着公司的网下载了三角洲行动，然后回宿舍之后电脑打了几把，感觉好像不长时间玩的话 3d 也不是很严重。然后主要是不能自己玩这个摸金，会觉得带枪进去被打死特别亏，跑刀又很无聊，所以说游戏的最高配置还是朋友，以后手游三角洲和小林杰哥一起玩，端游可以叫着别佳诺和学长，非常的好。&lt;/p&gt;
&lt;p&gt;好像没怎么完成自己给自己布置的任务，有点懒惰，慢慢来吧！&lt;/p&gt;
&lt;p&gt;晓蝶姐说 sql 没必要现在着急学，现在可以看看随机森林，lstm，回归模型，还有线性规划等等等等。&lt;/p&gt;
&lt;p&gt;我要自己学这些内容，还有英语，还有 python，这个下学期会用到，然后还有数学建模，还有 mark down 之类的语言。感觉玩电脑真的是一个非常有意思的过程，你可以创造很多新的东西，你还可以在学习的过程中学到更多的英语，这真的是一个很不错的事情&lt;/p&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="实习" scheme="https://tartar0us.github.io/tags/%E5%AE%9E%E4%B9%A0/" />
        <updated>2025-07-21T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/7%E6%9C%8821%E6%97%A5%E6%97%A5%E8%AE%B0/</id>
        <title>7月21日日记</title>
        <link rel="alternate" href="https://tartar0us.github.io/7%E6%9C%8821%E6%97%A5%E6%97%A5%E8%AE%B0/"/>
        <content type="html">&lt;pre&gt;&lt;code&gt;昨天20号，晚上和张紫旭一家一起吃饭了，还有一个小姑娘，平时这个小姑娘学文科的，经常六百多，张紫旭平时550，但是高考的时候他俩反过来了，张紫旭604，小姑娘我看应该是560左右，录取上了齐鲁工业大学的法学，然后张紫旭应该是被大连海事大学的计算机录取了。有点可惜差一点成校友了，因为他报志愿的时候把计算机全都放前面了，而不是专注于院校。要是把东秦的都放在前面就稳来了。

感觉昨天这两个哥们都挺帅的，张紫旭打扮的非常帅，烫头韩式纹理，然后还有好多耳夹，甚至还有狼尾

哦卧槽我想起来昨天上午去哪了，昨天上午回老家了，姑姑姑父表哥也回去了。吃饭到最后一直在批判我表哥，考研没考上，现在在家里还偶尔打游戏，考教师资格也没考上，当时最可惜的是潍柴来校招没去。哎。潍柴真的是一个很好的企业。然后现在在家也不上班，学习也不好好学，应该是准备二战了，但是也没有把心思全部放在学习上。有点愁人。自己不学别人怎么劝也没用。还是得自己幡然醒悟。   说实话，我觉得如果一个大学生，大学英语四级大学四年一直考一直没过的话，我觉得他这辈子也就这样了，如果一直维持下去。这个东西只要肯背单词，都能过的。

  19号下午开班会的时候说了劳动教育的事，我回老家的时候做了一顿排骨，然后好像是忘了记录家人的反馈了。。。没关系，视频和照片拍摄了。一定要拉满，周末的时候积极搞这些东西，争取不要等到最后 的ddl

  今天的话早上摆烂，中午在家吃，下午一共四个人开车来石家庄，定了酒店，距离公司还挺近的，步行六百多米，然后明天就要去上班哩。有点激动。

 今天晚上在孙大厨吃完饭出来之后，饭店门口围了一群精神小妹，手里拿着ktv的优惠卷问我们：“哥去不去唱歌“   我觉得他们还挺聪明的，知道在好的饭店门口问，不去烧烤摊之类的地方。但是感觉收入肯定很微薄，还不如进厂努努力，虽然累，但是起码比这样挣得多。

今天晚上和张紫旭 加上他表哥一起玩了pubg，卡的不行，第一次知道打游戏要开显卡。有点意思哈。然后明天准备跟着刘晓蝶姐姐学习了。加油
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;——————&lt;/p&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <category term="博客" scheme="https://tartar0us.github.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <updated>2025-07-20T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tartar0us.github.io/2024%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93.md/</id>
        <title>2024年度总结</title>
        <link rel="alternate" href="https://tartar0us.github.io/2024%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93.md/"/>
        <content type="html">&lt;h1 id=&#34;2024年度总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2024年度总结&#34;&gt;#&lt;/a&gt; 2024 年度总结&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;现在是 2025 年 1 月 15 日下午一点，我在东北大学秦皇岛分校的图书馆，还有一门微积分，考完试就可以回家了，真好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2024 年是比较割裂的一年。6 月初我还在和高考拼命斗争，十月初就已经正式开始大学生活了。24 年初，二月中旬和女朋友确定关系，基本上高三后半段都是靠着对她的想念支撑下来的。然后高三后半段感觉也没法发力了吧，落下的基本上就补不回来了，机械的考试刷题只能强化第一次学就理解了的内容。感觉高中真是地狱。早起晚睡，每天机械的做题，就为了所谓的能改变命运的高考。高考完了很空虚。因为在这之前你的任务就是高考考一个很好的成绩，但是现在你要面临很多东西。上面的说法不精确，你只是失去了一个具体的目标。你可以想做什么就做什么，但我认为也并不很是自由，因为暑假还要练车，要考虑志愿填报的事。但是好像身边的朋友有很多出去旅游玩的，我暑假只去爬了泰山，还去北京看眼睛了。可能是爸妈太忙了没时间带我出去，也可能是我的时间被分割成很细碎的部分。没有整块的时间旅游之类的。也可能是光刷抖音了。感觉暑假很懒，基本上饭都懒得做，玩一上午手机，到了饭点去姥姥家或者在家等着妈妈做（懒死了。）甚至高考之前做的一堆计划（甚至励志上王者）都没能实现。书也好久没看。有了手机，网络，好像再好看的小说也不会是首选了。镖人也没追完，当然蓝色监狱更没看。好笑的是到了大学在一个书摊买了 7 本书，一个学期一本也没看。我只能说自己自制力太差了，然后社交媒体的诱惑力太大。卸载了抖音还会刷快手，微信上的小视频，淘宝上的，甚至 b 站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大学混的还可以，军训负责人，班长，在中外开学典礼上作为学生代表发言，很荣幸，当时那段时间是忙并快乐着，向学长学姐请教未来发展方向。但是学业落下了。基本不听课，回寝室就是学生工作 + 打游戏，好像并没有很多的时间给学习（基本上没学过）。学生工作不是很难但是很琐碎。但是如果大二选择当主席或者书记说不定情形就完全不同了，那个时候的学业压力也会很大。这个学期和学长，同学，父母探讨过很多，最终从想保研认清了现实，想考研但是条件基本不允许，最后目前暂时想出国读研究生，想去新加坡国立大学。卧槽干啥都没意思。写这个总结还不是很想写。可能因为昨天晚上睡得有点晚了。太好哩后天就可以回家了！晚上九点多就可以到家了。无聊了不写了。老子学会数学。现在是晚上六点半。你屁也没学。滚吧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我经常思考自己到底要什么。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我本科阶段的目标目前只有三个 第一个变帅 第二个健康的生活 第三个是成功申请海外的研究生。当然还有快乐的生活。（我目前认知中的人生终极目标是健康和快乐）我个人最喜欢的是英国的帝国理工大学和新加坡的国立大学。要完成第一个目标我需要减肥，健身，拥有一个好身材，并且攒点钱买衣服，买一些护肤品保养自己的脸。要达到健康的目标我需要控制一下自己的饮食，并且增加体育锻炼，避免久坐和长时间用眼。而且在生活细节方面应该把自己的生活搞得井井有条而不是乱七八糟的。对于第三个目标，我基本有了方向，比如刷绩点，搞竞赛，考语言之类的，目前的阶段性任务就是把绩点提上去，张鸣谦说 帝国理工需要绩点达到 4.0 才比较稳妥～。对于我的第四个目标，我偶尔会觉得自己不快乐，这都是因为我没有学习，对考试没底（并间接影响到未来的发展）这会让我焦虑。而当我忙于学生工作或者学习，体育锻炼的时候会比较开心。所以我认为或许让自己忙起来会更开心一点，忙起来，然后在偶尔出去玩一玩，放松放松，会很爽。这个学期微信 qq 两个账号都上了王者，但是好像并没有很快乐，给我的感觉比较一般，并且因为上分的路上比较艰辛，也经常因为队友菜，输比赛而不高兴。打游戏的时候还偶尔会手脚冰凉。我觉得这好像并没有那么快乐。还有我这几天的心情低落可能跟生活节奏被打乱有关系。我将慢慢调整自己的作息，控制欲望并且坚决不熬夜。这样应该对我的情绪也会有所改善。实际上我不应该焦虑。学不下去就不学，舍友在补就让他补，他挺强的。不要比较，舍友在玩也不要被影响，要坚持完成自己的任务。要知道自己想要的是什么。对于学生工作，我觉得自己在完成所给任务放面基本很好，给导员和党委书记，院长方面留下了很好的印象。当然不知道出了成绩之后这种好印象还可不可以延续）。我对与大二学生工作的展望是，本学期开始我很热衷于学生工作，并希望在大二竞选主席或者团委书记，但是我认为就我目前的学习水平来看，大二的学业压力变大加上主席团的学生工作可能会让我应接不暇。功利一点讲我未来的计划好像也没有什么地方能用到学生工作。并且如果我成绩足够好，入党也会自然而然的轮到我。我在和学长交流的过程中发现自己好像只是喜欢那种身份。比如主席啊书记啊之类的，但是这个并没有什么权力，但是要承担相应的责任。当然我也对学生会的一些形式主义很反感。这也可能影响我的去留。具体等大二再说。对了普通话考试过了，但是差一点点就是一乙了，我明年再试试！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="生活" scheme="https://tartar0us.github.io/categories/%E7%94%9F%E6%B4%BB/" />
        <category term="成长" scheme="https://tartar0us.github.io/tags/%E6%88%90%E9%95%BF/" />
        <updated>2025-01-14T16:00:00.000Z</updated>
    </entry>
</feed>
